/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package lms;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class Exam_details extends javax.swing.JFrame {

    /**
     * Creates new form Exam_details_try
     
     */
    int tot2;
    static String  date_final,

    /**
     * Creates new form Exam_details
     */
    date_c,

    /**
     * Creates new form Exam_details
     */
    date_b,

    /**
     * Creates new form Exam_details
     */
    e_time, 

    /**
     * Creates new form Exam_details
     */
    correct_ans,

    /**
     * Creates new form Exam_details
     */
    wrong_ans,

    /**
     * Creates new form Exam_details
     */
    max_marks_1,

    /**
     * Creates new form Exam_details
     */
    min_marks_1,

    /**
     * Creates new form Exam_details
     */
    exam,

    /**
     * Creates new form Exam_details
     */
    date_a,

    /**
     * Creates new form Exam_details
     */
    tot,

    /**
     * Creates new form Exam_details
     */
    min,

    /**
     * Creates new form Exam_details
     */
    hh,

    /**
     * Creates new form Exam_details
     */
    session1,

    /**
     * Creates new form Exam_details
     */
    subject1,

    /**
     * Creates new form Exam_details
     */
    stream1,min_mS,max_mS,

    /**
     * Creates new form Exam_details
     */
    branch1,

    /**
     * Creates new form Exam_details
     */
    semester1,

    /**
     * Creates new form Exam_details
     */
    id;
    int cor1,wro1,min_m,max_m;
     String exam_id="",s1;
     //String a1;
     public Exam_details(String a)
     {
         exam_id=a;
         initComponents();
     }
    public Exam_details() {
        initComponents();
        //Exam_details();
        //Exam_details(s1);
        //sessionMouseClicked(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name_of_exam = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        session = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        stream = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        branch = new javax.swing.JComboBox();
        semester = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        subject = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        total_no_of_question = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        correct = new javax.swing.JComboBox();
        wrong = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        hours = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        minutes = new javax.swing.JComboBox();
        dd = new javax.swing.JComboBox();
        mm = new javax.swing.JComboBox();
        yy = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        save_test = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("EXAM DETAILS"));

        jLabel1.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel1.setText("NAME OF EXAM:");

        name_of_exam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_of_examActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel2.setText("SESSION:");

        session.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sessionMouseClicked(evt);
            }
        });
        session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel7.setText("STREAM:");

        stream.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                streamMouseClicked(evt);
            }
        });
        stream.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                streamPopupMenuWillBecomeVisible(evt);
            }
        });
        stream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streamActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel3.setText("SEMESTER:");

        jLabel4.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel4.setText("BRANCH:");

        branch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                branchMouseClicked(evt);
            }
        });
        branch.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                branchPopupMenuWillBecomeVisible(evt);
            }
        });
        branch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchActionPerformed(evt);
            }
        });

        semester.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semesterMouseClicked(evt);
            }
        });
        semester.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                semesterPopupMenuWillBecomeVisible(evt);
            }
        });
        semester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("SUBJECT:");

        subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjectMouseClicked(evt);
            }
        });
        subject.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                subjectPopupMenuWillBecomeVisible(evt);
            }
        });
        subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name_of_exam)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(session, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stream, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name_of_exam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(session, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(stream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("MARKING DETAILS"));

        jLabel8.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel8.setText("TOTAL NUMBER OF QUESTION:");

        total_no_of_question.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        total_no_of_question.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_no_of_questionActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel11.setText("MARKS FOR CORRECT ANSWER: ");

        jLabel12.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel12.setText("MARKS FOR WRONG ANSWER: ");

        correct.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50" }));

        wrong.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(correct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(total_no_of_question, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 716, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(wrong, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(total_no_of_question, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(wrong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("SCHEDULING"));

        jLabel13.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel13.setText("TIME DURATION:");

        jLabel14.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        jLabel14.setText("EXAM DATE:");

        hours.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", " " }));
        hours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoursActionPerformed(evt);
            }
        });

        jLabel15.setText(":");

        minutes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", " " }));

        dd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        yy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));

        jLabel9.setText("hrs");

        jLabel10.setText("min");

        jLabel16.setText("DD");

        jLabel17.setText("MM");

        jLabel18.setText("YY");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(27, 27, 27))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addGap(10, 10, 10)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        save_test.setFont(new java.awt.Font("Constantia", 1, 11)); // NOI18N
        save_test.setText("SAVE TEST");
        save_test.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_testActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel6))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(save_test, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(save_test)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*public void Exam_details()
    {   
        
        
        try
        {       
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="Select * from testdetails";
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                while(rs.next())
                {
                    name_of_exam.setText(rs.getString("exam_name"));
                    session.setSelectedItem(rs.getString("session_no"));
                    semester.setSelectedItem(rs.getString("semester"));
                    stream.setSelectedItem(rs.getString("stream"));
                    branch.setSelectedItem(rs.getString("branch"));
                    subject.setSelectedItem(rs.getString("subject"));
                    total_no_of_question.setSelectedItem(rs.getString("total_question"));
                    //max_marks.setSelectedItem(rs.getString("max_marks"));
                    //min_marks.setSelectedItem(rs.getString("min_marks"));
                    correct.setSelectedItem(rs.getString("correct"));
                    wrong.setSelectedItem(rs.getString("wrong"));
                   
                }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
 
        
      }
    public void hide()
    {
        name_of_exam.setEnabled(false);
        session.setEnabled(false);
        semester.setEnabled(false);
        subject.setEnabled(false);
        stream.setEnabled(false);
        branch.setEnabled(false);
        //max_marks.setEnabled(false);
        //min_marks.setEnabled(false);
        correct.setEnabled(false);
        wrong.setEnabled(false);
        total_no_of_question.setEnabled(false);
    }
    public void fromdata()
    {          
        try{
                
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String fetch="select * from testdetails where exam_id=?";
                PreparedStatement ps1=con.prepareStatement(fetch);
                ps1.setString(1,exam_id);
                System.out.print(exam_id);
                ResultSet rs=ps1.executeQuery();
                while(rs.next())
                {
                    name_of_exam.setText(rs.getString("Exam_name"));
                    session1=rs.getString("Session_no");
                    session.addItem(session1);
                    semester1=rs.getString("Semester");
                    semester.addItem(semester1);
                    subject1=rs.getString("Subject");
                    subject.addItem(subject1);
                    stream1=rs.getString("Stream");
                    stream.addItem(stream1);
                    branch1=rs.getString("Branch");
                    branch.addItem(branch1);
                    max_marks_1=rs.getString("max_marks");
                    max_marks.addItem(max_marks_1);
                    min_marks_1=rs.getString("min_marks");
                    min_marks.addItem(min_marks_1);
                    correct_ans=rs.getString("Correct");
                    correct.addItem(correct_ans);
                    wrong_ans=rs.getString("Wrong");
                    wrong.addItem(wrong_ans);
                    tot=rs.getString("total_question");
                    total_no_of_question.addItem(tot);
                }
    }
    catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }*/
    private void save_testActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_testActionPerformed
        // TODO add your handling code here:
            exam=name_of_exam.getText();
            correct_ans=correct.getSelectedItem().toString();
            cor1=Integer.parseInt(correct_ans);
            wrong_ans=wrong.getSelectedItem().toString();
            wro1=Integer.parseInt(wrong_ans);
            date_a=dd.getSelectedItem().toString();
            date_b=mm.getSelectedItem().toString();
            date_c=yy.getSelectedItem().toString();
            tot=total_no_of_question.getSelectedItem().toString();
            tot2=Integer.parseInt(tot);
            hh=hours.getSelectedItem().toString();
            min=minutes.getSelectedItem().toString();
            session1=session.getSelectedItem().toString();
            semester1=semester.getSelectedItem().toString();
            branch1=branch.getSelectedItem().toString();
            subject1=subject.getSelectedItem().toString();
            stream1=stream.getSelectedItem().toString();
            id= stream1+"/"+exam+"/"+branch1+"/"+subject1+"/"+semester1+"-"+session1;
            e_time=hh+":"+min;
            date_final=date_a+"/"+date_b+"/"+date_c;
            max_m=cor1*tot2;
            min_m=(max_m*33)/100;
            if(JOptionPane.showConfirmDialog(null,"Are you sure you want to save this test??")==0)
       {     try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="insert into testdetails values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement ps=con.prepareStatement(sql);
              
                ps.setString(1, exam);
                ps.setString(2,session1);
                ps.setString(3,stream1);
                ps.setString(4,branch1);
                ps.setString(5,subject1);
                ps.setString(6,semester1);
                ps.setString(7, tot);
                ps.setInt(8, max_m);
                ps.setInt(9,min_m);
                ps.setString(10, correct_ans);
                ps.setString(11, wrong_ans);
                ps.setString(12, date_final);
                ps.setString(13,id);
                ps.setString(14,e_time);
                ps.setString(15,hh);
                ps.setString(16,min);
                int i=ps.executeUpdate();
                //System.out.println("Hello");
                if(i>0)
                {
                  //  JOptionPane.showMessageDialog(null,"values Saved");
                    
                        Que q= new Que();       
                        q.setVisible(true);
                        this.setVisible(false); 
                        q.save_question();
                        q.saveexit();
                        q.Question_num();
                        q.answer_disable();
                        q.save_exit();
           
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"Field should not be Empty!");
            }
            
       }
       else
       {
       this.setVisible(true);
       }
            
    }//GEN-LAST:event_save_testActionPerformed
    public void save_testDisable()
    {
        save_test.setVisible(false);
    } 
    
    public void remove()
    {
        name_of_exam.setText("");
    }
    
    private void name_of_examActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_of_examActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_name_of_examActionPerformed

    private void hoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoursActionPerformed
        // TODO add your handling code here:
        hh=hours.getSelectedItem().toString();
    }//GEN-LAST:event_hoursActionPerformed

    private void total_no_of_questionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_no_of_questionActionPerformed
        // TODO add your handling code here:
        tot=total_no_of_question.getSelectedItem().toString();
    }//GEN-LAST:event_total_no_of_questionActionPerformed

 public void branchActionPerformed(java.awt.event.ActionEvent evt)
    {
    
    }
   
public void semesterActionPerformed(java.awt.event.ActionEvent evt)
    {
     
    }
    
public void streamActionPerformed(java.awt.event.ActionEvent evt)
    {
        
    }

public void subjectActionPerformed(java.awt.event.ActionEvent evt)
    {
    }

public void sessionActionPerformed(java.awt.event.ActionEvent evt)
{}
public void sessionPerformed()
{
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct session_no from course order by session_no asc";
               // System.out.println("Hello");
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    session1=rs.getString("session_no");
                    System.out.println(session1);
                    session.addItem(session1);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
    }
/*
public void streamPerformed()
{
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct stream from course";
               // System.out.println("Hello");
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    stream1=rs.getString("stream");
                    stream.addItem(stream1);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
    }
public void subjectPerformed()
{
        
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct subject from course";
               // System.out.println("Hello");
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    subject1=rs.getString("subject");
                    subject.addItem(subject1);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        
    }
public void semesterPerformed()
{
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct sem from course";
               // System.out.println("Hello");
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    semester1=rs.getString("sem");
                    semester.addItem(semester1);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
    }
public void branchPerformed()
{
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct branch from course";
               // System.out.println("Hello");
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    branch1=rs.getString("branch");
                    branch.addItem(branch1);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
    }
*/
    /*
    private void sessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionActionPerformed
        // TODO add your handling code here:
                
    }//GEN-LAST:event_sessionActionPerformed

    
    private void streamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streamActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_streamActionPerformed
*/

    private void sessionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sessionMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_sessionMouseClicked

    private void streamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_streamMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_streamMouseClicked

    private void semesterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semesterMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_semesterMouseClicked
/*
    private void branchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_branchActionPerformed
/*
    private void subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectActionPerformed
*/
    private void branchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_branchMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_branchMouseClicked

    private void subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectMouseClicked
/*
    private void semesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semesterActionPerformed
*/
    private void streamPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_streamPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        stream.removeAllItems();
        stream.setModel(new javax.swing.DefaultComboBoxModel());
        try
        {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct stream from course order by stream asc";
               // System.out.println("Hello");
                PreparedStatement ps=con.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    stream.addItem(rs.getString("stream"));
                }
        }
        catch(Exception e)
        {}
    }//GEN-LAST:event_streamPopupMenuWillBecomeVisible

    private void semesterPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_semesterPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        semester.removeAllItems();
        semester.setModel(new javax.swing.DefaultComboBoxModel());
        branch1= branch.getSelectedItem().toString();
        try
        {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct sem from course where branch=? order by sem asc";
               
                PreparedStatement ps=con.prepareStatement(sql);
                ps.setString(1,branch1);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    
                    semester.addItem(rs.getString("sem"));
                }
        }
        catch(Exception e)
        {}
        
    }//GEN-LAST:event_semesterPopupMenuWillBecomeVisible

    private void branchPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_branchPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        branch.removeAllItems();
        branch.setModel(new javax.swing.DefaultComboBoxModel());
        stream1= stream.getSelectedItem().toString();
        try
        {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct branch from course where stream=? order by branch asc";
               
                PreparedStatement ps=con.prepareStatement(sql);
                ps.setString(1,stream1);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    
                    branch.addItem(rs.getString("branch"));
                }
        }
        catch(Exception e)
        {}
    }//GEN-LAST:event_branchPopupMenuWillBecomeVisible

    private void subjectPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_subjectPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        subject.removeAllItems();
        subject.setModel(new javax.swing.DefaultComboBoxModel());
        branch1= branch.getSelectedItem().toString();
        try
        {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql="select distinct subject from course where branch=? order by subject asc";
               
                PreparedStatement ps=con.prepareStatement(sql);
                ps.setString(1,branch1);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next())
                {
                    
                    subject.addItem(rs.getString("subject"));
                }
        }
        catch(Exception e)
        {}
    }//GEN-LAST:event_subjectPopupMenuWillBecomeVisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Exam_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Exam_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Exam_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Exam_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Exam_details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox branch;
    private javax.swing.JComboBox correct;
    private javax.swing.JComboBox dd;
    private javax.swing.JComboBox hours;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox minutes;
    private javax.swing.JComboBox mm;
    private javax.swing.JTextField name_of_exam;
    private javax.swing.JButton save_test;
    private javax.swing.JComboBox semester;
    private javax.swing.JComboBox session;
    private javax.swing.JComboBox stream;
    private javax.swing.JComboBox subject;
    private javax.swing.JComboBox total_no_of_question;
    private javax.swing.JComboBox wrong;
    private javax.swing.JComboBox yy;
    // End of variables declaration//GEN-END:variables
}
