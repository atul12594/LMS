/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lms;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.Reader;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sony
 */
public class Home1Page extends javax.swing.JFrame implements ActionListener {
public DefaultTableModel tm;
public DefaultTableModel tmstdrep;
public DefaultTableModel tmfcltfed;
public DefaultTableModel tmstdlst;
public DefaultTableModel tmfcltlst;
public DefaultTableModel tmtestsch;
public DefaultTableModel tmstdadm;
public DefaultTableModel tmfcltadm;
public DefaultTableModel tmcrse;
public DefaultComboBoxModel cm;
    /**
     * Creates new form CoursePage
     */
    public Home1Page() {
        JOptionPane.showMessageDialog(null, "before Constructor");
        initComponents();
        JOptionPane.showMessageDialog(null, "Inside Constructor");
        Panel_Course.setVisible(false);
        TabbedPane_Notification.setVisible(false);
        Panel_StdReport.setVisible(false);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(false);
        Label_NotiNum.setVisible(false);
        Label_Notification.setOpaque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Functionalities = new javax.swing.JPanel();
        Button_Logout = new javax.swing.JButton();
        Label_WelcomeUser = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        Label_Logo = new javax.swing.JLabel();
        Label_Home = new javax.swing.JLabel();
        Label_Course = new javax.swing.JLabel();
        Label_StudentReoprt = new javax.swing.JLabel();
        Label_FacultyFeedback = new javax.swing.JLabel();
        Label_StudentList = new javax.swing.JLabel();
        Label_FacultyList = new javax.swing.JLabel();
        Label_Notification = new javax.swing.JLabel();
        Label_WelcomeUserName = new javax.swing.JLabel();
        Label_NotiNum = new javax.swing.JLabel();
        Panel_Welcome = new javax.swing.JPanel();
        Label_Welcome = new javax.swing.JLabel();
        Panel_FunctChange = new javax.swing.JPanel();
        Label_FunctChange = new javax.swing.JLabel();
        Button_Edit = new javax.swing.JButton();
        ComboBox_Stream = new javax.swing.JComboBox();
        ComboBox_Branch = new javax.swing.JComboBox();
        ComboBox_Sem = new javax.swing.JComboBox();
        ComboBox_Subject = new javax.swing.JComboBox();
        ComboBox_Notify = new javax.swing.JComboBox();
        Panel_NewsHome = new javax.swing.JPanel();
        ScrollPane_NewsHomeTable = new javax.swing.JScrollPane();
        Table_NewsHome = new javax.swing.JTable();
        Button_Add = new javax.swing.JButton();
        ComboBox_UserCateg = new javax.swing.JComboBox();
        Button_Update = new javax.swing.JButton();
        Button_Delete = new javax.swing.JButton();
        Button_Done = new javax.swing.JButton();
        Button_Cancel = new javax.swing.JButton();
        Panel_Course = new javax.swing.JPanel();
        ScrollPane_CourseTable = new javax.swing.JScrollPane();
        Table_Course = new javax.swing.JTable();
        Panel_StdReport = new javax.swing.JPanel();
        ScrollPane_StdReportTable = new javax.swing.JScrollPane();
        Table_StdReport = new javax.swing.JTable();
        TabbedPane_Notification = new javax.swing.JTabbedPane();
        ScrollPane_StdAdmssn_Notifctn = new javax.swing.JScrollPane();
        Table_StdAdmssn_Notifctn = new javax.swing.JTable();
        ScrollPane_FcltyReg_Notifctn = new javax.swing.JScrollPane();
        Table_FcltyReg_Notifctn = new javax.swing.JTable();
        ScrollPane_TestSchedule_Notifctn = new javax.swing.JScrollPane();
        Table_TestSchedule_Notifctn = new javax.swing.JTable();
        Panel_FacultyFeedback2 = new javax.swing.JPanel();
        ScrollPane_FacultyFeedbackTable = new javax.swing.JScrollPane();
        Table_FacultyFeedback = new javax.swing.JTable();
        Panel_StudentList = new javax.swing.JPanel();
        ScrollPane_StudentListTable = new javax.swing.JScrollPane();
        Table_StudentList = new javax.swing.JTable();
        Panel_FacultyList = new javax.swing.JPanel();
        ScrollPane_FacultyListTable = new javax.swing.JScrollPane();
        Table_FacultyList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Panel_Functionalities.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        Button_Logout.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        Button_Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/logout.jpg"))); // NOI18N
        Button_Logout.setText("  LOGOUT");
        Button_Logout.setBorder(new javax.swing.border.SoftBevelBorder(0));
        Button_Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_LogoutActionPerformed(evt);
            }
        });

        Label_WelcomeUser.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N
        Label_WelcomeUser.setText("Welcome");

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        Label_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/ep.PNG"))); // NOI18N

        Label_Home.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/home.png"))); // NOI18N
        Label_Home.setText("   Home");
        Label_Home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_HomeMouseClicked(evt);
            }
        });

        Label_Course.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_Course.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/CONTENTS.PNG"))); // NOI18N
        Label_Course.setText("   Course");
        Label_Course.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_Course.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_CourseMouseClicked(evt);
            }
        });

        Label_StudentReoprt.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_StudentReoprt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/student_report.jpg"))); // NOI18N
        Label_StudentReoprt.setText("   View Student Report");
        Label_StudentReoprt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_StudentReoprt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_StudentReoprtMouseClicked(evt);
            }
        });

        Label_FacultyFeedback.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_FacultyFeedback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/feedback-iconedit.png"))); // NOI18N
        Label_FacultyFeedback.setText("   View FacultyFeedback");
        Label_FacultyFeedback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_FacultyFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_FacultyFeedbackMouseClicked(evt);
            }
        });

        Label_StudentList.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_StudentList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/list_all_participantsedit.png"))); // NOI18N
        Label_StudentList.setText("   View List of Students");
        Label_StudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_StudentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_StudentListMouseClicked(evt);
            }
        });

        Label_FacultyList.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_FacultyList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/list_all_participantsedit.png"))); // NOI18N
        Label_FacultyList.setText("   View List of Faculty");
        Label_FacultyList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_FacultyList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_FacultyListMouseClicked(evt);
            }
        });

        Label_Notification.setBackground(new java.awt.Color(255, 0, 0));
        Label_Notification.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Label_Notification.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/notification.jpg"))); // NOI18N
        Label_Notification.setText("   Notifications");
        Label_Notification.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_Notification.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_NotificationMouseClicked(evt);
            }
        });

        Label_WelcomeUserName.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N

        Label_NotiNum.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        Label_NotiNum.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout Panel_FunctionalitiesLayout = new javax.swing.GroupLayout(Panel_Functionalities);
        Panel_Functionalities.setLayout(Panel_FunctionalitiesLayout);
        Panel_FunctionalitiesLayout.setHorizontalGroup(
            Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                .addGroup(Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label_StudentReoprt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label_Course, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label_FacultyFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label_StudentList))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label_FacultyList, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(Button_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(Label_WelcomeUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label_WelcomeUserName)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addGroup(Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Label_Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                        .addComponent(Label_Notification, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label_NotiNum, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        Panel_FunctionalitiesLayout.setVerticalGroup(
            Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_FunctionalitiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_WelcomeUser)
                    .addComponent(Label_WelcomeUserName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Label_Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Label_Home, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Label_Course, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(Label_StudentReoprt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Label_FacultyFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Label_StudentList)
                .addGap(18, 18, 18)
                .addComponent(Label_FacultyList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Panel_FunctionalitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Notification)
                    .addComponent(Label_NotiNum))
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Button_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Label_NotiNum.setOpaque(true);
        Label_NotiNum.setVisible(false);

        Panel_Welcome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_Welcome.setPreferredSize(new java.awt.Dimension(609, 56));

        Label_Welcome.setFont(new java.awt.Font("Constantia", 1, 24)); // NOI18N
        Label_Welcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_Welcome.setLabelFor(Panel_Welcome);
        Label_Welcome.setText("***** WELCOME TO XYZ COLLEGE *****");
        Label_Welcome.setName("");

        javax.swing.GroupLayout Panel_WelcomeLayout = new javax.swing.GroupLayout(Panel_Welcome);
        Panel_Welcome.setLayout(Panel_WelcomeLayout);
        Panel_WelcomeLayout.setHorizontalGroup(
            Panel_WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_WelcomeLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(Label_Welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_WelcomeLayout.setVerticalGroup(
            Panel_WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_WelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label_Welcome)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel_FunctChange.setPreferredSize(new java.awt.Dimension(92, 48));

        Label_FunctChange.setFont(new java.awt.Font("Constantia", 1, 20)); // NOI18N
        Label_FunctChange.setText("News and Events");

        Button_Edit.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Button_Edit.setText("Edit");
        Button_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_EditActionPerformed(evt);
            }
        });

        ComboBox_Stream.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        ComboBox_Stream.setToolTipText("");
        ComboBox_Stream.setName("");
        ComboBox_Stream.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBox_StreamMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ComboBox_StreamMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBox_StreamMousePressed(evt);
            }
        });
        ComboBox_Stream.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_StreamPopupMenuWillBecomeVisible(evt);
            }
        });
        ComboBox_Stream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_StreamActionPerformed(evt);
            }
        });

        ComboBox_Branch.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        ComboBox_Branch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBox_BranchMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBox_BranchMousePressed(evt);
            }
        });
        ComboBox_Branch.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_BranchPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_BranchPopupMenuWillBecomeVisible(evt);
            }
        });
        ComboBox_Branch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_BranchItemStateChanged(evt);
            }
        });

        ComboBox_Sem.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        ComboBox_Sem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ComboBox_SemMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBox_SemMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ComboBox_SemMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBox_SemMousePressed(evt);
            }
        });
        ComboBox_Sem.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_SemPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_SemPopupMenuWillBecomeVisible(evt);
            }
        });
        ComboBox_Sem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_SemItemStateChanged(evt);
            }
        });
        ComboBox_Sem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_SemActionPerformed(evt);
            }
        });

        ComboBox_Subject.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        ComboBox_Subject.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_SubjectPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_SubjectPopupMenuWillBecomeVisible(evt);
            }
        });

        ComboBox_Notify.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_NotifyPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_NotifyPopupMenuWillBecomeVisible(evt);
            }
        });

        javax.swing.GroupLayout Panel_FunctChangeLayout = new javax.swing.GroupLayout(Panel_FunctChange);
        Panel_FunctChange.setLayout(Panel_FunctChangeLayout);
        Panel_FunctChangeLayout.setHorizontalGroup(
            Panel_FunctChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_FunctChangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_FunctChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_FunctChangeLayout.createSequentialGroup()
                        .addComponent(Label_FunctChange, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button_Edit))
                    .addGroup(Panel_FunctChangeLayout.createSequentialGroup()
                        .addComponent(ComboBox_Stream, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBox_Branch, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBox_Sem, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBox_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ComboBox_Notify, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_FunctChangeLayout.setVerticalGroup(
            Panel_FunctChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_FunctChangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_FunctChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_FunctChange)
                    .addComponent(Button_Edit))
                .addGap(18, 18, 18)
                .addGroup(Panel_FunctChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_Stream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_Branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_Sem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBox_Notify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        ComboBox_Stream.setVisible(false);
        ComboBox_Stream.getAccessibleContext().setAccessibleName("");
        ComboBox_Branch.setVisible(false);
        ComboBox_Sem.setVisible(false);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(false);

        Panel_NewsHome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_NewsHome.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Table_NewsHome.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_NewsHome.setModel(new javax.swing.table.DefaultTableModel());
        Table_NewsHome.setModel(tm = new DefaultTableModel());
        Object colheads[] = {
            "                     S.No.", "                     News ID","                     News Feed", "                     Date ","                     Category"
        };
        Object rows[][] = {{},{}};
        tm = new javax.swing.table.DefaultTableModel();
        tm.addColumn(colheads[0]);
        tm.addColumn(colheads[1]);
        tm.addColumn(colheads[2]);
        tm.addColumn(colheads[3]);
        tm.addColumn(colheads[4]);
        Table_NewsHome.setModel(tm);
        Table_NewsHome.setCellSelectionEnabled(true);
        Table_NewsHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_NewsHome.setEnabled(false);
        Table_NewsHome.setName("NewsFeed");
        Table_NewsHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_NewsHomeMouseClicked(evt);
            }
        });
        ScrollPane_NewsHomeTable.setViewportView(Table_NewsHome);

        javax.swing.GroupLayout Panel_NewsHomeLayout = new javax.swing.GroupLayout(Panel_NewsHome);
        Panel_NewsHome.setLayout(Panel_NewsHomeLayout);
        Panel_NewsHomeLayout.setHorizontalGroup(
            Panel_NewsHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_NewsHomeTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Panel_NewsHomeLayout.setVerticalGroup(
            Panel_NewsHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_NewsHomeTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
        );

        Button_Add.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Button_Add.setText("Add");
        Button_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_AddActionPerformed(evt);
            }
        });

        ComboBox_UserCateg.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        ComboBox_UserCateg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Category ---", "Clerk", "Faculty", "Student", "All" }));
        ComboBox_UserCateg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_UserCategActionPerformed(evt);
            }
        });

        Button_Update.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Button_Update.setText("Update");
        Button_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_UpdateActionPerformed(evt);
            }
        });

        Button_Delete.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Button_Delete.setText("Delete");
        Button_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_DeleteActionPerformed(evt);
            }
        });

        Button_Done.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Button_Done.setText("Done");
        Button_Done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_DoneActionPerformed(evt);
            }
        });

        Button_Cancel.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Button_Cancel.setText("Cancel");
        Button_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_CancelActionPerformed(evt);
            }
        });

        Panel_Course.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_Course.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        Panel_Course.setPreferredSize(new java.awt.Dimension(4, 431));

        Table_Course.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_Course.setModel(new javax.swing.table.DefaultTableModel()
        );
        Object colheads9[] = {
            "                         S.No. ", "                         Subject","                         Subject ID","                         Course ID"
        };
        Object rows9[][] = {{},{}};
        tmcrse = new javax.swing.table.DefaultTableModel();
        tmcrse.addColumn(colheads9[0]);
        tmcrse.addColumn(colheads9[1]);
        tmcrse.addColumn(colheads9[2]);
        tmcrse.addColumn(colheads9[3]);
        Table_Course.setModel(tmcrse);
        Table_Course.setCellSelectionEnabled(true);
        Table_Course.setEnabled(true);
        Table_Course.setCellSelectionEnabled(true);
        Table_Course.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_Course.setEnabled(false);
        Table_Course.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_CourseMouseClicked(evt);
            }
        });
        ScrollPane_CourseTable.setViewportView(Table_Course);

        javax.swing.GroupLayout Panel_CourseLayout = new javax.swing.GroupLayout(Panel_Course);
        Panel_Course.setLayout(Panel_CourseLayout);
        Panel_CourseLayout.setHorizontalGroup(
            Panel_CourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_CourseTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Panel_CourseLayout.setVerticalGroup(
            Panel_CourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_CourseTable, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        Panel_StdReport.setBackground(new java.awt.Color(255, 255, 255));
        Panel_StdReport.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_StdReport.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Table_StdReport.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_StdReport.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads1[] = {
            "                     S.No.", "                     Name ", "                     Student ID"
        };
        Object rows1[][] = {{},{}};
        tmstdrep = new javax.swing.table.DefaultTableModel();
        tmstdrep.addColumn(colheads1[0]);
        tmstdrep.addColumn(colheads1[1]);
        tmstdrep.addColumn(colheads1[2]);
        Table_StdReport.setModel(tmstdrep);
        Table_StdReport.setCellSelectionEnabled(true);
        Table_StdReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_StdReport.setEnabled(true);
        Table_StdReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_StdReportMouseClicked(evt);
            }
        });
        ScrollPane_StdReportTable.setViewportView(Table_StdReport);

        javax.swing.GroupLayout Panel_StdReportLayout = new javax.swing.GroupLayout(Panel_StdReport);
        Panel_StdReport.setLayout(Panel_StdReportLayout);
        Panel_StdReportLayout.setHorizontalGroup(
            Panel_StdReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_StdReportTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Panel_StdReportLayout.setVerticalGroup(
            Panel_StdReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_StdReportTable)
        );

        TabbedPane_Notification.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TabbedPane_Notification.setPreferredSize(new java.awt.Dimension(4, 431));
        TabbedPane_Notification.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabbedPane_NotificationMouseClicked(evt);
            }
        });

        ScrollPane_StdAdmssn_Notifctn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        Table_StdAdmssn_Notifctn.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_StdAdmssn_Notifctn.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads6[] = {
            "                 S.No.", "                 Name", "                 Registration No.", "                 Stream", "                 Branch", "                 Semester","                 Status"};
        Object rows6[][] = {{},{}};
        tmstdadm = new javax.swing.table.DefaultTableModel();
        tmstdadm.addColumn(colheads6[0]);
        tmstdadm.addColumn(colheads6[1]);
        tmstdadm.addColumn(colheads6[2]);
        tmstdadm.addColumn(colheads6[3]);
        tmstdadm.addColumn(colheads6[4]);
        tmstdadm.addColumn(colheads6[5]);
        tmstdadm.addColumn(colheads6[6]);
        Table_FacultyList.setModel(tmstdadm);
        Table_StdAdmssn_Notifctn.setCellSelectionEnabled(true);
        Table_StdAdmssn_Notifctn.setEnabled(true);
        Table_StdAdmssn_Notifctn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_StdAdmssn_NotifctnMouseClicked(evt);
            }
        });
        ScrollPane_StdAdmssn_Notifctn.setViewportView(Table_StdAdmssn_Notifctn);

        TabbedPane_Notification.addTab("Student Admission", ScrollPane_StdAdmssn_Notifctn);

        ScrollPane_FcltyReg_Notifctn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        Table_FcltyReg_Notifctn.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_FcltyReg_Notifctn.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads7[] = {
            "                 S.No.", "                 Name", "                 Registration No.", "                 Stream", "                 Department","                 Name                 Status"};
        Object rows7[][] = {{},{}};
        tmfcltadm = new javax.swing.table.DefaultTableModel();
        tmfcltadm.addColumn(colheads7[0]);
        tmfcltadm.addColumn(colheads7[1]);
        tmfcltadm.addColumn(colheads7[2]);
        tmfcltadm.addColumn(colheads7[3]);
        tmfcltadm.addColumn(colheads7[4]);
        tmfcltadm.addColumn(colheads7[5]);
        Table_FacultyList.setModel(tmstdadm);
        Table_FcltyReg_Notifctn.setCellSelectionEnabled(true);
        Table_FcltyReg_Notifctn.setEnabled(true);
        Table_FcltyReg_Notifctn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_FcltyReg_NotifctnMouseClicked(evt);
            }
        });
        ScrollPane_FcltyReg_Notifctn.setViewportView(Table_FcltyReg_Notifctn);

        TabbedPane_Notification.addTab("Faculty Registration", ScrollPane_FcltyReg_Notifctn);

        ScrollPane_TestSchedule_Notifctn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        Table_TestSchedule_Notifctn.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_TestSchedule_Notifctn.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads5[] = {
            "               S.No.", "               Test Name", "               Test ID", "               Stream", "               Branch", "               Semester", "               Subject","               Test Date"
        };
        Object rows5[][] = {{},{}};
        tmtestsch = new javax.swing.table.DefaultTableModel();
        tmtestsch.addColumn(colheads5[0]);
        tmtestsch.addColumn(colheads5[1]);
        tmtestsch.addColumn(colheads5[2]);
        tmtestsch.addColumn(colheads5[3]);
        tmtestsch.addColumn(colheads5[4]);
        tmtestsch.addColumn(colheads5[5]);
        tmtestsch.addColumn(colheads5[6]);
        tmtestsch.addColumn(colheads5[7]);
        Table_TestSchedule_Notifctn.setModel(tmtestsch);
        Table_TestSchedule_Notifctn.setCellSelectionEnabled(true);
        Table_TestSchedule_Notifctn.setEnabled(false);
        Table_TestSchedule_Notifctn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_TestSchedule_Notifctn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_TestSchedule_NotifctnMouseClicked(evt);
            }
        });
        ScrollPane_TestSchedule_Notifctn.setViewportView(Table_TestSchedule_Notifctn);

        TabbedPane_Notification.addTab("Test Schedule", ScrollPane_TestSchedule_Notifctn);

        Panel_FacultyFeedback2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_FacultyFeedback2.setEnabled(false);
        Panel_FacultyFeedback2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        Panel_FacultyFeedback2.setPreferredSize(new java.awt.Dimension(40, 431));

        Table_FacultyFeedback.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_FacultyFeedback.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads2[] = {
            "                 S.No.", "                 Name", "                 Faculty ID "
        };
        Object rows2[][] = {{},{}};
        tmfcltfed = new javax.swing.table.DefaultTableModel();
        tmfcltfed.addColumn(colheads2[0]);
        tmfcltfed.addColumn(colheads2[1]);
        tmfcltfed.addColumn(colheads2[2]);
        Table_FacultyFeedback.setModel(tmfcltfed);
        Table_FacultyFeedback.setCellSelectionEnabled(true);
        Table_FacultyFeedback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        Table_FacultyFeedback.setEnabled(true);
        Table_FacultyFeedback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_FacultyFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_FacultyFeedbackMouseClicked(evt);
            }
        });
        ScrollPane_FacultyFeedbackTable.setViewportView(Table_FacultyFeedback);

        javax.swing.GroupLayout Panel_FacultyFeedback2Layout = new javax.swing.GroupLayout(Panel_FacultyFeedback2);
        Panel_FacultyFeedback2.setLayout(Panel_FacultyFeedback2Layout);
        Panel_FacultyFeedback2Layout.setHorizontalGroup(
            Panel_FacultyFeedback2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_FacultyFeedbackTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Panel_FacultyFeedback2Layout.setVerticalGroup(
            Panel_FacultyFeedback2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_FacultyFeedbackTable, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        Panel_StudentList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_StudentList.setPreferredSize(new java.awt.Dimension(30, 431));

        Table_StudentList.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_StudentList.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads3[] = {
            "                 S.No.", "                 Name", "                 Student ID"
        };
        Object rows3[][] = {{},{}};
        tmstdlst = new javax.swing.table.DefaultTableModel();
        tmstdlst.addColumn(colheads3[0]);
        tmstdlst.addColumn(colheads3[1]);
        tmstdlst.addColumn(colheads3[2]);
        Table_StudentList.setModel(tmstdlst);

        Table_StudentList.setCellSelectionEnabled(true);
        Table_StudentList.setEnabled(true);
        Table_StudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_StudentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_StudentListMouseClicked(evt);
            }
        });
        ScrollPane_StudentListTable.setViewportView(Table_StudentList);

        javax.swing.GroupLayout Panel_StudentListLayout = new javax.swing.GroupLayout(Panel_StudentList);
        Panel_StudentList.setLayout(Panel_StudentListLayout);
        Panel_StudentListLayout.setHorizontalGroup(
            Panel_StudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_StudentListTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Panel_StudentListLayout.setVerticalGroup(
            Panel_StudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_StudentListTable, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        Panel_FacultyList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_FacultyList.setPreferredSize(new java.awt.Dimension(20, 431));

        Table_FacultyList.setFont(new java.awt.Font("Constantia", 0, 12));
        Table_FacultyList.setModel(new javax.swing.table.DefaultTableModel());
        Object colheads4[] = {
            "                 S.No.", "                 Name", "                Faculty ID"
        };
        Object rows4[][] = {{},{}};
        tmfcltlst = new javax.swing.table.DefaultTableModel();
        tmfcltlst.addColumn(colheads4[0]);
        tmfcltlst.addColumn(colheads4[1]);
        tmfcltlst.addColumn(colheads4[2]);
        Table_FacultyList.setModel(tmfcltfed);
        Table_FacultyList.setCellSelectionEnabled(true);
        Table_FacultyList.setEnabled(true);
        Table_FacultyList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Table_FacultyList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_FacultyListMouseClicked(evt);
            }
        });
        ScrollPane_FacultyListTable.setViewportView(Table_FacultyList);

        javax.swing.GroupLayout Panel_FacultyListLayout = new javax.swing.GroupLayout(Panel_FacultyList);
        Panel_FacultyList.setLayout(Panel_FacultyListLayout);
        Panel_FacultyListLayout.setHorizontalGroup(
            Panel_FacultyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_FacultyListTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Panel_FacultyListLayout.setVerticalGroup(
            Panel_FacultyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane_FacultyListTable)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Panel_Course, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TabbedPane_Notification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Panel_FacultyList, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Panel_FacultyFeedback2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Panel_StudentList, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Panel_StdReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Panel_NewsHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Panel_FunctChange, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                            .addComponent(Panel_Welcome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Panel_Functionalities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Button_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBox_UserCateg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_Done, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(293, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Panel_Welcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Panel_FunctChange, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Panel_FacultyList, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                            .addComponent(Panel_FacultyFeedback2, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                            .addComponent(Panel_StudentList, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                            .addComponent(Panel_Course, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                            .addComponent(Panel_StdReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TabbedPane_Notification, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                            .addComponent(Panel_NewsHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Panel_Functionalities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_Add)
                    .addComponent(Button_Update)
                    .addComponent(Button_Delete)
                    .addComponent(ComboBox_UserCateg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_Done)
                    .addComponent(Button_Cancel))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        Button_Add.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        Panel_Course.setVisible(false);
        Panel_Course.getAccessibleContext().setAccessibleDescription("");
        Panel_StdReport.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_LogoutActionPerformed
        // TODO add your handling code here:
        //this.setVisible(false);
        LoginPage12 L = new LoginPage12();
        int logout=JOptionPane.showConfirmDialog(this,"Are u want to sure u want to logout");
        if(logout==0)
        {
            this.setVisible(false);
            L.setVisible(true);
        }
        
    }//GEN-LAST:event_Button_LogoutActionPerformed
int news = 0,coursecount=0;
    private void Button_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_UpdateActionPerformed
        // TODO add your handling code here:
        if(Button_Edit.isEnabled())
        {
            news=1;
            JOptionPane.showMessageDialog(this,"Click on the news to Update");
            Table_NewsHome.setEnabled(true);
        }
        else
        {
            coursecount=1;
            JOptionPane.showMessageDialog(this,"Click on the course to update");
        }
        
    }//GEN-LAST:event_Button_UpdateActionPerformed

    private void Button_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_DeleteActionPerformed
        // TODO add your handling code here:
    news=2;
    JOptionPane.showMessageDialog(this,"Click on the news to Delete");
    Table_NewsHome.setEnabled(true);
    }//GEN-LAST:event_Button_DeleteActionPerformed

    private void Button_DoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_DoneActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Button_DoneActionPerformed

    private void Button_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_CancelActionPerformed
        // TODO add your handling code here:
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        Button_Edit.setEnabled(true);
        
    }//GEN-LAST:event_Button_CancelActionPerformed

    private void Button_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_EditActionPerformed
        // TODO add your handling code here:
        Button_Add.setVisible(true);
        Button_Update.setVisible(true);
        Button_Delete.setVisible(true);
        ComboBox_UserCateg.setVisible(true);
        Button_Done.setVisible(true);
        Button_Cancel.setVisible(true);
        if(Button_Add.isVisible())
        {
            Button_Edit.setEnabled(false);
        }
        
    }//GEN-LAST:event_Button_EditActionPerformed
 
    private void Button_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_AddActionPerformed
        // TODO add your handling code here:
      
        if(Button_Edit.isEnabled())
        {
            AddCourse  ac = new AddCourse();
            ac.setVisible(true);
        }
        else
        {
            AddNews an = new AddNews();
            an.setVisible(true);
        }
    }//GEN-LAST:event_Button_AddActionPerformed

    private void ComboBox_UserCategActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_UserCategActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_ComboBox_UserCategActionPerformed

    private void Label_HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_HomeMouseClicked
        // TODO add your handling code here:
        Button_Edit.setEnabled(true);
        Panel_Welcome.setVisible(true);
        Panel_Functionalities.setVisible(true);
        Panel_NewsHome.setVisible(true);
        Panel_Course.setVisible(false);
        Panel_StdReport.setVisible(false);
        TabbedPane_Notification.setVisible(false);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_FunctChange.setVisible(true);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(false);
        Label_FunctChange.setText("News and Events");
        Button_Edit.setVisible(true);
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        ComboBox_Stream.setVisible(false);
        ComboBox_Branch.setVisible(false);
        ComboBox_Sem.setVisible(false);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(false);
        remtmnews();
        popnews();
    }//GEN-LAST:event_Label_HomeMouseClicked
int courecount=0;
    private void Label_CourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_CourseMouseClicked
        // TODO add your handling code here:
        courecount=1;
        Button_Edit.setVisible(false);
        Label_FunctChange.setText("Course");
        Panel_NewsHome.setVisible(false);
        Panel_Course.setVisible(true);
        Panel_StdReport.setVisible(false);
        TabbedPane_Notification.setVisible(false);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(false);
        Button_Add.setVisible(true);
        Button_Update.setVisible(true);
        Button_Delete.setVisible(true);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(true);
        Button_Cancel.setVisible(true); 
        ComboBox_Stream.setVisible(true);
        ComboBox_Branch.setVisible(true);
        ComboBox_Sem.setVisible(true);
        ComboBox_Subject.setVisible(true);
        ComboBox_Notify.setVisible(false);
        ComboBox_Stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---"}));
        ComboBox_Branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---"}));
        ComboBox_Sem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Semester ---"}));
        ComboBox_Subject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Subject ---"}));
        remtmfcltfed();
        remtmfcltlst();
        remtmstdlst();
        remtmstdrep();
        remtmcrse();
    }//GEN-LAST:event_Label_CourseMouseClicked

    private void Label_StudentReoprtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_StudentReoprtMouseClicked
        // TODO add your handling code here:
        Panel_NewsHome.setVisible(false);
        Panel_Course.setVisible(false);
        Panel_StdReport.setVisible(true);
        TabbedPane_Notification.setVisible(false);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(false);
        Button_Edit.setVisible(false);
        Label_FunctChange.setText("Student Report");
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        ComboBox_Stream.setVisible(true);
        ComboBox_Branch.setVisible(true);
        ComboBox_Sem.setVisible(true);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(false);
        Table_StdReport.setCellSelectionEnabled(true);
        ComboBox_Stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---"}));
        ComboBox_Branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---"}));
        ComboBox_Sem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Semester ---"}));
        remtmfcltfed();
        remtmfcltlst();
        remtmstdlst();
        remtmstdrep();
        remtmcrse();
    }//GEN-LAST:event_Label_StudentReoprtMouseClicked

    private void Label_FacultyFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_FacultyFeedbackMouseClicked
        // TODO add your handling code here:
        Panel_NewsHome.setVisible(false);
        Panel_Course.setVisible(false);
        Panel_StdReport.setVisible(false);
        TabbedPane_Notification.setVisible(false);
        Panel_FacultyFeedback2.setVisible(true);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(false);
        Button_Edit.setVisible(false);
        Label_FunctChange.setText("Faculty Feedback");
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        ComboBox_Stream.setVisible(true);
        ComboBox_Branch.setVisible(true);
        ComboBox_Sem.setVisible(false);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(false);
        ComboBox_Stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---"}));
        ComboBox_Branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---"}));
        remtmfcltlst();
        remtmstdlst();
        remtmstdrep();
        remtmfcltfed();
        remtmcrse();
    }//GEN-LAST:event_Label_FacultyFeedbackMouseClicked

    private void Label_StudentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_StudentListMouseClicked
        // TODO add your handling code here:
        Panel_NewsHome.setVisible(false);
        Panel_Course.setVisible(false);
        Panel_StdReport.setVisible(false);
        TabbedPane_Notification.setVisible(false);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_StudentList.setVisible(true);
        Panel_FacultyList.setVisible(false);
        Button_Edit.setVisible(false);
        Label_FunctChange.setText("List of Students");
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        ComboBox_Stream.setVisible(true);
        ComboBox_Branch.setVisible(true);
        ComboBox_Sem.setVisible(true);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(false);
        Table_StudentList.setCellSelectionEnabled(true);
        ComboBox_Stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---"}));
        ComboBox_Branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---"}));
        ComboBox_Sem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Semester ---"}));
        remtmfcltfed();
        remtmfcltlst();
        remtmstdrep();
        remtmstdlst();
        remtmcrse();
    }//GEN-LAST:event_Label_StudentListMouseClicked

    private void Label_FacultyListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_FacultyListMouseClicked
        // TODO add your handling code here:
        Panel_NewsHome.setVisible(false);
        Panel_Course.setVisible(false);
        Panel_StdReport.setVisible(false);
        TabbedPane_Notification.setVisible(false);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(true);
        Button_Edit.setVisible(false);
        Label_FunctChange.setText("List of Faculty");
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        ComboBox_Stream.setVisible(true);
        ComboBox_Branch.setVisible(true);
        ComboBox_Sem.setVisible(false);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(false);
        Table_FacultyList.setCellSelectionEnabled(true);
        ComboBox_Stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---"}));
        ComboBox_Branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---"}));
        remtmfcltfed();
        remtmstdlst();
        remtmstdrep();
        remtmfcltlst();
        remtmcrse();
    }//GEN-LAST:event_Label_FacultyListMouseClicked

    private void Label_NotificationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_NotificationMouseClicked
        // TODO add your handling code here:
        Label_NotiNum.setVisible(false);
        Label_Notification.setOpaque(false);
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "update notification set seen_status='seen'  where seen_status like 'no%'";
            PreparedStatement ps = con.prepareStatement(sql);
            int i = ps.executeUpdate();
            if(i>0)
            {}
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Panel_NewsHome.setVisible(false);
        Panel_Course.setVisible(false);
        Panel_StdReport.setVisible(false);
        TabbedPane_Notification.setVisible(true);
        Panel_FacultyFeedback2.setVisible(false);
        Panel_StudentList.setVisible(false);
        Panel_FacultyList.setVisible(false);
        Button_Edit.setVisible(false);
        Label_FunctChange.setText("Notification");
        Button_Add.setVisible(false);
        Button_Update.setVisible(false);
        Button_Delete.setVisible(false);
        ComboBox_UserCateg.setVisible(false);
        Button_Done.setVisible(false);
        Button_Cancel.setVisible(false);
        ComboBox_Stream.setVisible(true);
        ComboBox_Notify.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Request ---", "New Requests", "View Previously Taken Decisions"}));
        Table_StdAdmssn_Notifctn.setCellSelectionEnabled(true);
        Table_FcltyReg_Notifctn.setCellSelectionEnabled(true);
        ComboBox_Stream.setVisible(false);
        ComboBox_Branch.setVisible(false);
        ComboBox_Sem.setVisible(false);
        ComboBox_Subject.setVisible(false);
        ComboBox_Notify.setVisible(true);
        remtmfcltfed();
        remtmfcltlst();
        remtmstdlst();
        remtmstdrep();
        remtmstdadm();
        remtmfcltadm();
        remtmtestsch();
        remtmcrse();
        notifications();
        studentadm();
        facultyreg();
    }//GEN-LAST:event_Label_NotificationMouseClicked
    
    private void ComboBox_StreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_StreamActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_ComboBox_StreamActionPerformed

    private void Table_StdReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_StdReportMouseClicked
        // TODO add your handling code here:
        ReportWindow rw = new ReportWindow();
        rw.setVisible(true);
        rw.TextField_Name_StdRep.setText(Table_StdReport.getValueAt(Table_StdReport.getSelectedRow(), 1).toString());
        rw.TextField_ID_StdRep.setText(Table_StdReport.getValueAt(Table_StdReport.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_Table_StdReportMouseClicked

    private void Table_StudentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_StudentListMouseClicked
        // TODO add your handling code here:
        StudentListWindow sw = new StudentListWindow();
        sw.setVisible(true);
        sw.TextField_NameStdLst.setText(Table_StudentList.getValueAt(Table_StudentList.getSelectedRow(), 1).toString());
        sw.TextField_IDStdLst.setText(Table_StudentList.getValueAt(Table_StudentList.getSelectedRow(), 2).toString());
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "select * from s_details where s_id=? ";
                String sql1 = "select * from sregistration where regist_no=?";
                PreparedStatement ps = con.prepareStatement(sql);
                PreparedStatement ps1 = con.prepareStatement(sql1);
                ps.setString(1, sw.TextField_IDStdLst.getText());
                ps1.setString(1, sw.TextField_RegNoStdLst.getText());
                ResultSet rs = ps.executeQuery();
                while(rs.next())
                {
                   sw.TextField_DOBStdLst.setText(rs.getString("dob"));
                   sw.TextField_GendStdLst.setText(rs.getString("s_gender"));
                   sw.TextField_CategStdLst.setText(rs.getString("s_category"));
                   sw.TextField_BloodStdLst.setText(rs.getString("s_bloodgroup"));
                   sw.TextField_StreamStdLst.setText(rs.getString("stream"));
                   sw.TextField_BranchStdLst.setText(rs.getString("branch"));
                   sw.TextField_AdmYrStdLst.setText(rs.getString("batch"));
                   sw.TextField_FatherStdLst.setText(rs.getString("father_name"));
                   sw.TextField_AddStdLst.setText(rs.getString("s_address"));
                   sw.TextField_ContactStdLst.setText(rs.getString("s_mobno"));
                   sw.TextField_ParentConStdLst.setText(rs.getString("father_mobno"));   
                   sw.TextField_EmailStdLst.setText(rs.getString("s_email_id"));
                   sw.TextField_RegNoStdLst.setText(rs.getString("regist_no"));
                }
                ResultSet rs1 = ps1.executeQuery();
                while(rs1.next())
                {
                   sw.TextField_MotherStdLst.setText(rs1.getString("mother_name"));
                   sw.TextField_10StdLst.setText(rs1.getString("per10"));
                   sw.TextField_12StdLst.setText(rs1.getString("per12"));
                   sw.TextField_ScoreStdLst.setText(rs1.getString("ent_score"));
                }
            }   
            catch(ClassNotFoundException e)
            { System.out.println(e);}
            catch(Exception e)
            { System.out.println(e);}       
    }//GEN-LAST:event_Table_StudentListMouseClicked

    private void Table_FacultyFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_FacultyFeedbackMouseClicked
        // TODO add your handling code here:
        FacultyFeedbackWindow ffw = new FacultyFeedbackWindow();
        ffw.setVisible(true);
        ffw.TextField_NameFcltyFed.setText(Table_FacultyFeedback.getValueAt(Table_FacultyFeedback.getSelectedRow(), 1).toString());
        ffw.TextField_IDFcltyFed.setText(Table_FacultyFeedback.getValueAt(Table_FacultyFeedback.getSelectedRow(), 2).toString());
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "select * from f_details where f_id=? ";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, ffw.TextField_IDFcltyFed.getText());
                ResultSet rs = ps.executeQuery();
                while(rs.next())
                {
                   ffw.TextField_DesgnFacFed.setText(rs.getString("designation"));
                   ffw.TextField_StreamFacFed.setText(rs.getString("stream"));
                   ffw.TextField_DeprtFacFed.setText(rs.getString("department"));
                   //ffw.TextField_SemFacFed.setText(rs.getString("sem"));
                   ffw.TextField_RateFacFed.setText(rs.getString("rating"));
                }
            }   
            catch(ClassNotFoundException e)
            { System.out.println(e);}
            catch(Exception e)
            { System.out.println(e);}       
    }//GEN-LAST:event_Table_FacultyFeedbackMouseClicked

    private void Table_FacultyListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_FacultyListMouseClicked
        // TODO add your handling code here:
        FacultyListWindow fw = new FacultyListWindow();
        fw.setVisible(true);
        fw.TextField_NameFcltLst.setText(Table_FacultyList.getValueAt(Table_FacultyList.getSelectedRow(), 1).toString());
        fw.TextField_IDFcltLst.setText(Table_FacultyList.getValueAt(Table_FacultyList.getSelectedRow(), 2).toString());
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "select * from f_details where f_id=? ";
                String sql1 = "select * from f_registration where regist_no=?";
                PreparedStatement ps = con.prepareStatement(sql);
                PreparedStatement ps1 = con.prepareStatement(sql1);
                ps.setString(1, fw.TextField_IDFcltLst.getText());
                ps1.setString(1, fw.TextField_RegNoFcltLst.getText());
                ResultSet rs = ps.executeQuery();
                while(rs.next())
                {
                   fw.TextField_DOBFcltLst.setText(rs.getString("dob"));
                   fw.TextField_GendFcltLst.setText(rs.getString("f_gender"));
                   fw.TextField_BloodFcltLst.setText(rs.getString("f_bloodgroup"));
                   fw.TextField_StreamFcltLst.setText(rs.getString("stream"));
                   fw.TextField_DepartFcltLst.setText(rs.getString("department"));
                   fw.TextField_FatherFcltLst.setText(rs.getString("father_name"));
                   fw.TextField_AddFcltLst.setText(rs.getString("f_address"));
                   fw.TextField_ContactFcltLst.setText(rs.getString("f_mobno"));
                   fw.TextField_EmailFcltLst.setText(rs.getString("f_email_id"));
                   fw.TextField_RegNoFcltLst.setText(rs.getString("regist_no"));
                   fw.TextField_DegreeFcltLst.setText(rs.getString("degree"));
                }
                ResultSet rs1 = ps1.executeQuery();
                while(rs1.next())
                {
                   fw.TextField_ExpFcltLst.setText(rs1.getString("experience"));
                   fw.TextField_RegYrFcltLst.setText(rs1.getString("year"));
                   fw.TextField_MotherFcltLst.setText(rs1.getString("mother_name"));
                }
            }   
            catch(ClassNotFoundException e)
            { System.out.println(e);}
            catch(Exception e)
            { System.out.println(e);}       
    }//GEN-LAST:event_Table_FacultyListMouseClicked

    private void Table_StdAdmssn_NotifctnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_StdAdmssn_NotifctnMouseClicked
        // TODO add your handling code here:
        StudentAdmissionWindow sa = new StudentAdmissionWindow();
        sa.setVisible(true);
        sa.TextField_StdNameAdm.setText(Table_StdAdmssn_Notifctn.getValueAt(Table_StdAdmssn_Notifctn.getSelectedRow(), 1).toString());
        sa.TextField_StdRegNumAdm.setText(Table_StdAdmssn_Notifctn.getValueAt(Table_StdAdmssn_Notifctn.getSelectedRow(), 2).toString());
        sa.TextField_StdStreamAdm.setText(Table_StdAdmssn_Notifctn.getValueAt(Table_StdAdmssn_Notifctn.getSelectedRow(), 3).toString());
        sa.TextField_StdBranchAdm.setText(Table_StdAdmssn_Notifctn.getValueAt(Table_StdAdmssn_Notifctn.getSelectedRow(),4).toString());
        sa.TextField_StdSemAdm.setText(Table_StdAdmssn_Notifctn.getValueAt(Table_StdAdmssn_Notifctn.getSelectedRow(), 5).toString());
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from sregistration where regist_no=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, sa.TextField_StdRegNumAdm.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                sa.TextField_StdDOBAdm.setText(rs.getString("dob"));
                sa.TextField_StdGenAdm.setText(rs.getString("s_gender"));
                sa.TextField_StdCategAdm.setText(rs.getString("s_category"));
                sa.TextField_StdBloodAdm.setText(rs.getString("s_bloodgroup"));
                sa.TextField_Std10Adm.setText(rs.getString("per10"));
                sa.TextField_Std12Adm.setText(rs.getString("per12"));
                sa.TextField_StdScoreAdm.setText(rs.getString("ent_score"));
                sa.TextField_StdYearAdm.setText(rs.getString("batch"));
                sa.TextField_StdFatherAdm.setText(rs.getString("father_name"));
                sa.TextField_StdMotherAdm.setText(rs.getString("mother_name"));
                sa.TextField_StdAddAdm.setText(rs.getString("s_address"));
                sa.TextField_StdPhoneAdm.setText(rs.getString("s_mobno"));
                sa.TextField_StdParentPhoneAdm.setText(rs.getString("parent_mobno"));
                sa.TextField_StdEmailAdm.setText(rs.getString("s_email_id"));
            }            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
    }//GEN-LAST:event_Table_StdAdmssn_NotifctnMouseClicked
String filelocation;
    private void Table_FcltyReg_NotifctnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_FcltyReg_NotifctnMouseClicked
        // TODO add your handling code here:
        FacultyRegisterWindow fwr = new FacultyRegisterWindow();
        fwr.setVisible(true); 
        fwr.TextField_NameFcltyReg.setText(Table_FcltyReg_Notifctn.getValueAt(Table_FcltyReg_Notifctn.getSelectedRow(), 1).toString());
        fwr.TextField_RegNoFcltyReg.setText(Table_FcltyReg_Notifctn.getValueAt(Table_FcltyReg_Notifctn.getSelectedRow(), 2).toString());
        fwr.TextField_StreamFcltyReg.setText(Table_FcltyReg_Notifctn.getValueAt(Table_FcltyReg_Notifctn.getSelectedRow(), 3).toString());
        fwr.TextField_DepartFcltyReg.setText(Table_FcltyReg_Notifctn.getValueAt(Table_FcltyReg_Notifctn.getSelectedRow(), 4).toString());
        try
        {
          Class.forName("oracle.jdbc.driver.OracleDriver");
          Connection con = DriverManager.getConnection("jdbc:oracle:thin:@LocalHost:1521:XE","SYSTEM","qwer1234");
          String sql = "select * from f_registration where regist_no=?";
          PreparedStatement ps = con.prepareStatement(sql);
          ps.setString(1, fwr.TextField_RegNoFcltyReg.getText());
          ResultSet rs = ps.executeQuery();
          while(rs.next())
          {
              fwr.TextField_DOBFcltyReg.setText(rs.getString("dob"));
              fwr.TextField_GendFcltyReg.setText(rs.getString("f_gender"));
              fwr.TextField_CategFcltyReg.setText(rs.getString("f_category"));
              fwr.TextField_BloodFcltyReg.setText(rs.getString("f_bloodgroup"));
              fwr.TextField_DegFcltyReg.setText(rs.getString("f_degree"));
              fwr.TextField_ExprncFcltyReg.setText(rs.getString("experience"));
              fwr.TextField_DesigtFcltyReg.setText(rs.getString("f_designation"));
              fwr.TextField_YearFcltyReg.setText(rs.getString("year"));
              fwr.TextField_FatherFcltyReg.setText(rs.getString("father_name"));
              fwr.TextField_MotherFcltyReg.setText(rs.getString("mother_name"));
              fwr.TextField_AddFcltyReg.setText(rs.getString("f_address"));
              fwr.TextField_ContFcltyReg.setText(rs.getString("f_mobno"));
              fwr.TextField_ParentContFcltyReg.setText(rs.getString("parent_mobno"));
              fwr.TextField_EmailFcltyRegFcltyReg.setText(rs.getString("f_email_id"));
              fwr.TextField_RegDateFcltyRegFcltyReg.setText(rs.getString("reg_date"));
          }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
    }//GEN-LAST:event_Table_FcltyReg_NotifctnMouseClicked

    private void Table_TestSchedule_NotifctnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_TestSchedule_NotifctnMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Table_TestSchedule_NotifctnMouseClicked
    public void popnews()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from newsfeed";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            while(rs.next())
            {
                Object [] rowData = new Object[col];
                for(int i = 1; i < rowData.length; ++i)
                {  
                    rowData[i] = rs.getObject(i);
                }
                tm.addRow(rowData);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Table_NewsHome.setModel(tm);
        int rowcount=0;
        for(int r=0;r<Table_NewsHome.getRowCount();++r)
        {
            tm.setValueAt(++rowcount,r,0);
        }
    }
    String unseencount;
    int unseencnt;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Table_NewsHome.setCellSelectionEnabled(true);
        popnews();
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select count(seen_status) from notification where user_type like 'Ad%' and seen_status like 'no%'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                unseencount=rs.getString("count(seen_status)");
            }
            unseencnt=Integer.parseInt(unseencount);
            if(unseencnt>0)
            {
                Label_NotiNum.setText(unseencount);
                Label_NotiNum.setVisible(true);
                Label_Notification.setOpaque(true);
            }
            else
            {
                Label_Notification.setOpaque(false);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        
    }//GEN-LAST:event_formWindowOpened
int rwct;
String getid,getdate,gettopic,getcateg;
    private void Table_NewsHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_NewsHomeMouseClicked
        // TODO add your handling code here:
        if(news==1)
        {
            rwct = Table_NewsHome.getSelectedRowCount();
            getid=Table_NewsHome.getValueAt(rwct, 1).toString();
            gettopic=Table_NewsHome.getValueAt(rwct, 2).toString();
            getdate=Table_NewsHome.getValueAt(rwct, 3).toString();
            getcateg=Table_NewsHome.getValueAt(rwct, 4).toString();
            UpdateNews un = new UpdateNews(getid,gettopic,getdate,getcateg);
            un.setVisible(true);
        }
        else if(news==2)
        {
            rwct=Table_NewsHome.getSelectedRowCount();
            getid=Table_NewsHome.getValueAt(rwct, 1).toString();
            try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "delete from newsfeed where news_id=?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, getid);
                ResultSet rs = ps.executeQuery();    
                int ret = JOptionPane.showConfirmDialog(this, "Are you sure you want to Delete this News?");
                if(ret==0)
                {
                    while(rs.next())
                    {
                        JOptionPane.showMessageDialog(this,"News Deleted");
                    }
                }
                else if(ret==1 || ret==2)
                {
                    JOptionPane.showMessageDialog(this,"News Not Deleted");
                }
            }
            catch(ClassNotFoundException e)
            {}
            catch(Exception e)
            {}
        }
        else
        {
            int rwc = Table_NewsHome.getSelectedRowCount();
            String topic = Table_NewsHome.getValueAt(rwc, 2).toString();
            String date1 = Table_NewsHome.getValueAt(rwc, 3).toString();
            try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "select * from newsfeed where news_topic=?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, topic);
                ResultSet rs = ps.executeQuery();
                rs.next();
                Clob c = rs.getClob("news_link");
                Reader r = c.getCharacterStream();
                java.util.Date today = Calendar.getInstance().getTime();
                SimpleDateFormat formatter = new SimpleDateFormat("dd-mm-yyyy-hh.mm.ss");
                String s =topic+date1+"downloaded at"+formatter.format(today);
                FileWriter fw = new FileWriter("A:\\NewsDownload\\"+s+".txt");
                int i;
                int retr = JOptionPane.showConfirmDialog(this, "Are you sure you want to Download this news:\n"+topic);
                if(retr==0)
                {
                    while((i=r.read())!=-1)
                    {
                        fw.write((char)i);
                        System.out.println(i);
                    }
                    JOptionPane.showMessageDialog(this,"Download Successful");
                }
                else if(retr==1 || retr==2)
                {
                    JOptionPane.showMessageDialog(this, "News not Downloated");
                }
                fw.close();
                con.close();
            }
            catch(ClassNotFoundException e)
            {}  
            catch(Exception e)
            {}
        }
        
    }//GEN-LAST:event_Table_NewsHomeMouseClicked

    private void ComboBox_SemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_SemItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_SemItemStateChanged

    private void ComboBox_SemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_SemActionPerformed
        // TODO add your handling code here:
                
    }//GEN-LAST:event_ComboBox_SemActionPerformed

    private void ComboBox_SemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_SemMouseClicked
        // TODO add your handling code here:        
  remtmstdrep();
    }//GEN-LAST:event_ComboBox_SemMouseClicked

    private void ComboBox_SemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_SemMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ComboBox_SemMousePressed

    private void ComboBox_SemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_SemMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_SemMouseExited

    private void ComboBox_StreamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_StreamMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_ComboBox_StreamMouseClicked

    private void ComboBox_SemPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_SemPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String stream = ComboBox_Stream.getSelectedItem().toString();
        String branch = ComboBox_Branch.getSelectedItem().toString();
        String sem = ComboBox_Sem.getSelectedItem().toString();
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql1 = "select * from s_details where stream=? and branch=? and sem=? ";
            PreparedStatement ps1 = con1.prepareStatement(sql1);
            ps1.setString(1, stream);
            ps1.setString(2, branch);
            ps1.setString(3, sem);
            ResultSet rs1 = ps1.executeQuery();
            ResultSetMetaData rd1 = rs1.getMetaData();
            int col1 = rd1.getColumnCount();
            while(rs1.next())
            {
                Object [] rowData1 = new Object[col1];
                for(int i = 1; i < rowData1.length; ++i)
                {
                    
                    if(i==1)
                    {
                        rowData1[i] = rs1.getObject("S_Name");
                    }
                    else if(i==2)
                    {
                        rowData1[i] = rs1.getObject("S_Id");
                    }
                    else
                    {}
                }
                tmstdrep.addRow(rowData1);
                tmstdlst.addRow(rowData1);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Table_StdReport.setModel(tmstdrep);
        int rowcount=0;
        for(int r=0;r<Table_StdReport.getRowCount();++r)
        {
            tmstdrep.setValueAt(++rowcount,r,0);
        }
        Table_StudentList.setModel(tmstdlst);
        int rowcount1=0;
        for(int r=0;r<Table_StdReport.getRowCount();++r)
        {
            tmstdlst.setValueAt(++rowcount1,r,0);
        }
    }//GEN-LAST:event_ComboBox_SemPopupMenuWillBecomeInvisible

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosed
public void remtmstdlst()
{
        for(int e=Table_StudentList.getRowCount()-1; e>=0;e--)
        {
            tmstdlst.removeRow(e);
        }
}
public void remtmstdrep()
{
    for(int e=Table_StdReport.getRowCount()-1; e>=0;e--)
    {
            //e=0;
            tmstdrep.removeRow(e);
    }
}
public void remtmfcltfed()
{
    for(int e=Table_FacultyFeedback.getRowCount()-1; e>=0;e--)
    
    {
        tmfcltfed.removeRow(e);
    }
}
public void  remtmfcltlst()
{
    for(int e=Table_FacultyList.getRowCount()-1; e>=0;e--)
    
    {
        tmfcltlst.removeRow(e);
    }
}
public void remtmstdadm()
{
    for(int e=Table_StdAdmssn_Notifctn.getRowCount()-1; e>=0;e--)
    
    {
        tmstdadm.removeRow(e);
    }
}
public void remtmfcltadm()
{
    for(int e=Table_FcltyReg_Notifctn.getRowCount()-1; e>=0;e--)
    
    {
        tmfcltadm.removeRow(e);
    }
}
public void remtmtestsch()
{
    for(int e=Table_TestSchedule_Notifctn.getRowCount()-1; e>=0;e--)
    
    {
        tmtestsch.removeRow(e);
    }
}
public void remtmcrse()
{
    for(int e=Table_Course.getRowCount()-1; e>=0;e--)
    
    {
        tmcrse.removeRow(e);
    }
}
public void remtmnews()
{
    for(int e=Table_NewsHome.getRowCount()-1; e>=0;e--)
    
    {
        tm.removeRow(e);
    }
}
    private void ComboBox_StreamMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_StreamMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ComboBox_StreamMouseEntered
    
    private void ComboBox_StreamPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_StreamPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        ComboBox_Stream.removeAllItems();
        ComboBox_Stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---"}));
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select distinct stream from course ";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {   
                ComboBox_Stream.addItem(rs.getString("stream"));
            }
        }   
        catch(ClassNotFoundException e)
        { System.out.println(e);}
        catch(Exception e)
        { System.out.println(e);}

    }//GEN-LAST:event_ComboBox_StreamPopupMenuWillBecomeVisible
    
    private void ComboBox_BranchPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_BranchPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        remtmfcltfed();
        remtmfcltlst();
        ComboBox_Branch.removeAllItems();
        ComboBox_Branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---"}));
        String stream = ComboBox_Stream.getSelectedItem().toString();
        try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "select distinct branch from course where stream=?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, stream);
                ResultSet rs = ps.executeQuery();
                while(rs.next())
                {
                    ComboBox_Branch.addItem(rs.getString("branch"));
                }
            }   
            catch(ClassNotFoundException e)
            {}
            catch(Exception e)
            {}       
    }//GEN-LAST:event_ComboBox_BranchPopupMenuWillBecomeVisible
   
    private void ComboBox_SemPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_SemPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        remtmstdlst();
        remtmstdrep();
        ComboBox_Sem.removeAllItems();
        ComboBox_Sem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Semester ---"}));
        String stream = ComboBox_Stream.getSelectedItem().toString();
        String branch = ComboBox_Branch.getSelectedItem().toString();
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select distinct sem from course where stream=? and branch=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, stream);
            ps.setString(2, branch);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                ComboBox_Sem.addItem(rs.getString("sem"));
            }
        }   
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}  
  
    }//GEN-LAST:event_ComboBox_SemPopupMenuWillBecomeVisible

    private void ComboBox_SemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_SemMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_SemMouseReleased

    private void ComboBox_BranchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_BranchMouseClicked
        // TODO add your handling code here:
        for(int e=Table_FacultyFeedback.getRowCount()-1;e>=0;e--)
        {
            tmfcltfed.removeRow(e);
        }
    }//GEN-LAST:event_ComboBox_BranchMouseClicked

    private void ComboBox_BranchPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_BranchPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String stream = ComboBox_Stream.getSelectedItem().toString();
        String branch = ComboBox_Branch.getSelectedItem().toString();
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from f_details where stream=? and department=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, stream);
            ps.setString(2, branch);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            while(rs.next())
            {
                Object [] rowData = new Object[col];
                for (int i = 1; i < rowData.length; ++i)
                {
                    if(i==1)
                    {
                        rowData[i] = rs.getObject("F_Name");
                    }
                    else if(i==2)
                    {
                        rowData[i] = rs.getObject("F_Id");
                    }
                    else
                    {}
                }
                tmfcltfed.addRow(rowData);
                tmfcltlst.addRow(rowData);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Table_FacultyFeedback.setModel(tmfcltfed);
        int rowcount=0;
        for(int r=0;r<Table_FacultyFeedback.getRowCount();++r)
        {
            tmfcltfed.setValueAt(++rowcount,r,0);
        }
        Table_FacultyList.setModel(tmfcltlst);
        int rowcount1=0;
        for(int r=0;r<Table_FacultyList.getRowCount();++r)
        {
            tmfcltlst.setValueAt(++rowcount1,r,0);
        }
    }//GEN-LAST:event_ComboBox_BranchPopupMenuWillBecomeInvisible

    private void ComboBox_BranchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_BranchItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_BranchItemStateChanged

    private void ComboBox_BranchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_BranchMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_BranchMousePressed

    private void ComboBox_StreamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox_StreamMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_StreamMousePressed

    private void TabbedPane_NotificationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabbedPane_NotificationMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TabbedPane_NotificationMouseClicked
    public void notifications()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from testdetails";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            while(rs.next())
            {
                Object [] rowData = new Object[col];
                for (int i = 1; i < rowData.length; ++i)
                {
                    if(i==1)
                    {
                        rowData[i] = rs.getObject("exam_name");
                    }
                    else if(i==2)
                    {
                        rowData[i] = rs.getObject("exam_id");
                    }
                    else if(i==3)
                    {
                        rowData[i] = rs.getObject("stream");
                    }
                    else if(i==4)
                    {
                        rowData[i] = rs.getObject("branch");
                    }
                    else if(i==5)
                    {
                        rowData[i] = rs.getObject("semester");
                    }
                    else if(i==6)
                    {
                        rowData[i] = rs.getObject("subject");
                    }
                    else if(i==7)
                    {
                        rowData[i] = rs.getObject("exam-date");
                    }
                    else{}
                }
                tmtestsch.addRow(rowData);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Table_TestSchedule_Notifctn.setModel(tmtestsch);
        int rowcount=0;
        for(int r=0;r<Table_TestSchedule_Notifctn.getRowCount();++r)
        {
            tmtestsch.setValueAt(++rowcount,r,0);
        }        
    }
    public void studentadm()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql1 = "select * from sregistration where adm_status like 'pen%'";
            PreparedStatement ps1 = con.prepareStatement(sql1);
            ResultSet rs1 = ps1.executeQuery();
            ResultSetMetaData rd1 = rs1.getMetaData();
            int col1 = rd1.getColumnCount();
            while(rs1.next())
            {
                Object [] rowData1 = new Object[col1];
                for (int i = 1; i < rowData1.length; ++i)
                {
                    if(i==1)
                    {
                        rowData1[i] = rs1.getObject("s_name");
                    }
                    else if(i==2)
                    {
                        rowData1[i] = rs1.getObject("regist_no");
                    }
                    else if(i==3)
                    {
                        rowData1[i] = rs1.getObject("course");
                    }
                    else if(i==4)
                    {
                        rowData1[i] = rs1.getObject("branch");
                    }
                    else if(i==5)
                    {
                        rowData1[i] = rs1.getObject("sem");
                    }
                    else if(i==6)
                    {
                        rowData1[i] = rs1.getObject("adm_status");
                    }
                    else{}
                }
                tmstdadm.addRow(rowData1);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Table_StdAdmssn_Notifctn.setModel(tmstdadm);
        int rowcount1=0;
        for(int r=0;r<Table_StdAdmssn_Notifctn.getRowCount();++r)
        {
            tmstdadm.setValueAt(++rowcount1,r,0);
        }
        
    }
    public void facultyreg()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql2 = "select * from f_registration where reg_status like 'pen%'";
            PreparedStatement ps2 = con.prepareStatement(sql2);
            ResultSet rs2 = ps2.executeQuery();
            ResultSetMetaData rd2 = rs2.getMetaData();
            int col2 = rd2.getColumnCount();
            while(rs2.next())
            {
                Object [] rowData2 = new Object[col2];
                for (int i = 1; i < rowData2.length; ++i)
                {
                    if(i==1)
                    {
                        rowData2[i] = rs2.getObject("f_name");
                    }
                    else if(i==2)
                    {
                        rowData2[i] = rs2.getObject("regist_no");
                    }
                    else if(i==3)
                    {
                        rowData2[i] = rs2.getObject("stream");
                    }
                    else if(i==4)
                    {
                        rowData2[i] = rs2.getObject("branch");
                    }
                    else if(i==5)
                    {
                        rowData2[i] = rs2.getObject("reg_status");
                    }
                    else{}
                }
                tmfcltadm.addRow(rowData2);
                Table_FcltyReg_Notifctn.setModel(tmfcltadm);
            int rowcount2=0;
            for(int r=0;r<Table_FcltyReg_Notifctn.getRowCount();++r)
            {
                tmfcltadm.setValueAt(++rowcount2,r,0);
            }
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
    }
    public void prevstudentadm()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql1 = "select * from sregistration where adm_status like 'rej%'";
            PreparedStatement ps1 = con.prepareStatement(sql1);
            ResultSet rs1 = ps1.executeQuery();
            ResultSetMetaData rd1 = rs1.getMetaData();
            int col1 = rd1.getColumnCount();
            while(rs1.next())
            {
                Object [] rowData1 = new Object[col1];
                for (int i = 1; i < rowData1.length; ++i)
                {
                    if(i==1)
                    {
                        rowData1[i] = rs1.getObject("s_name");
                    }
                    else if(i==2)
                    {
                        rowData1[i] = rs1.getObject("regist_no");
                    }
                    else if(i==3)
                    {
                        rowData1[i] = rs1.getObject("course");
                    }
                    else if(i==4)
                    {
                        rowData1[i] = rs1.getObject("branch");
                    }
                    else if(i==5)
                    {
                        rowData1[i] = rs1.getObject("sem");
                    }
                    else if(i==6)
                    {
                        rowData1[i] = rs1.getObject("adm_status");
                    }
                    else{}
                }
                tmstdadm.addRow(rowData1);
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        Table_StdAdmssn_Notifctn.setModel(tmstdadm);
        int rowcount1=0;
        for(int r=0;r<Table_StdAdmssn_Notifctn.getRowCount();++r)
        {
            tmstdadm.setValueAt(++rowcount1,r,0);
        }
        
    }
    public void prevfacultyreg()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql2 = "select * from f_registration where reg_status like 'rej%'";
            PreparedStatement ps2 = con.prepareStatement(sql2);
            ResultSet rs2 = ps2.executeQuery();
            ResultSetMetaData rd2 = rs2.getMetaData();
            int col2 = rd2.getColumnCount();
            while(rs2.next())
            {
                Object [] rowData2 = new Object[col2];
                for (int i = 1; i < rowData2.length; ++i)
                {
                    if(i==1)
                    {
                        rowData2[i] = rs2.getObject("f_name");
                    }
                    else if(i==2)
                    {
                        rowData2[i] = rs2.getObject("regist_no");
                    }
                    else if(i==3)
                    {
                        rowData2[i] = rs2.getObject("stream");
                    }
                    else if(i==4)
                    {
                        rowData2[i] = rs2.getObject("branch");
                    }
                    else if(i==5)
                    {
                        rowData2[i] = rs2.getObject("reg_status");
                    }
                    else{}
                }
                tmfcltadm.addRow(rowData2);
                Table_FcltyReg_Notifctn.setModel(tmfcltadm);
            int rowcount2=0;
            for(int r=0;r<Table_FcltyReg_Notifctn.getRowCount();++r)
            {
                tmfcltadm.setValueAt(++rowcount2,r,0);
            }
            }
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
    }
    private void ComboBox_NotifyPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_NotifyPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        remtmstdadm();
        remtmfcltadm();
        remtmtestsch();
        notifications();
        studentadm();
        facultyreg();
        String selreq=ComboBox_Notify.getSelectedItem().toString();
        if(selreq=="New Requests")
        {
            notifications();
            studentadm();
            facultyreg();
        }
        else if(selreq=="View Previously Taken Decisions")
        {
            notifications();
            prevstudentadm();
            prevfacultyreg();
        }
    }//GEN-LAST:event_ComboBox_NotifyPopupMenuWillBecomeInvisible

    private void ComboBox_SubjectPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_SubjectPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        remtmcrse();
        ComboBox_Subject.removeAllItems();
        ComboBox_Subject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Subject ---"}));
        String stream = ComboBox_Stream.getSelectedItem().toString();
        String branch = ComboBox_Branch.getSelectedItem().toString();
        String sem = ComboBox_Sem.getSelectedItem().toString();
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select distinct subject from course where stream=? and branch=? and sem=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, stream);
            ps.setString(2, branch);
            ps.setString(3, sem);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                ComboBox_Subject.addItem(rs.getString("subject"));
            }
        }   
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}  
    }//GEN-LAST:event_ComboBox_SubjectPopupMenuWillBecomeVisible

    private void ComboBox_SubjectPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_SubjectPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String stream = ComboBox_Stream.getSelectedItem().toString();
        String branch = ComboBox_Branch.getSelectedItem().toString();
        String sem = ComboBox_Sem.getSelectedItem().toString();
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "SYSTEM", "qwer1234");
            String sql1 = "select * from course where stream=? and branch=? and sem=? ";
            PreparedStatement ps1 = con1.prepareStatement(sql1);
            ps1.setString(1, stream);
            ps1.setString(2, branch);
            ps1.setString(3, sem);
            ResultSet rs1 = ps1.executeQuery();
            ResultSetMetaData rd1 = rs1.getMetaData();
            int col1 = rd1.getColumnCount();
            while (rs1.next()) {
                Object[] rowData1 = new Object[col1];
                for (int i = 1; i < rowData1.length; ++i) 
                {
                    if (i == 1) 
                    {
                        rowData1[i] = rs1.getObject("subject");
                    }
                    else if (i==2)
                    {
                        rowData1[i] = rs1.getObject("subject_id");
                    }
                    else if (i==3)
                    {
                        rowData1[i] = rs1.getObject("course_id");
                    }
                    else 
                    {}
                }
                tmcrse.addRow(rowData1);
            }
        } catch (ClassNotFoundException e) {
        } catch (Exception e) {
        }
        Table_Course.setModel(tmcrse);
        int rowcount = 0;
        for (int r = 0; r < Table_Course.getRowCount(); ++r) {
            tmcrse.setValueAt(++rowcount, r, 0);
        }
    }//GEN-LAST:event_ComboBox_SubjectPopupMenuWillBecomeInvisible

    private void Table_CourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_CourseMouseClicked
        // TODO add your handling code here:
        if(coursecount==1)
        {
            int rct = Table_Course.getSelectedRowCount();
            String subname = Table_Course.getValueAt(rct, 1).toString();
            String subid = Table_Course.getValueAt(rct, 2).toString();
            String idcourse = Table_Course.getValueAt(rct, 3).toString();
            UpdateCourse uc = new UpdateCourse(subname,subid,idcourse);
            uc.setVisible(true);
        }
        else
        {
            int rwc = Table_Course.getSelectedRowCount();
            String topic = Table_Course.getValueAt(rwc, 1).toString();
            String subid = Table_Course.getValueAt(rwc, 2).toString();
            try
            {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                String sql = "select * from course where subject_id=?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, subid);
                ResultSet rs = ps.executeQuery();
                rs.next();
                Clob c = rs.getClob("syllabus_link");
                Reader r = c.getCharacterStream();
                java.util.Date today = Calendar.getInstance().getTime();
                SimpleDateFormat formatter = new SimpleDateFormat("dd-mm-yyyy-hh.mm.ss");
                String s =topic+"downloaded at"+formatter.format(today);
                FileWriter fw = new FileWriter("A:\\NewsDownload\\"+s+".txt");
                int i;
                int retr = JOptionPane.showConfirmDialog(this, "Are you sure you want to Download syllabus of this subject:\n"+topic+" "+subid);
                if(retr==0)
                {
                    while((i=r.read())!=-1)
                    {
                        fw.write((char)i);
                        System.out.println(i);
                    }
                    JOptionPane.showMessageDialog(this,"Download Successful");
                }
                else if(retr==1 || retr==2)
                {
                    JOptionPane.showMessageDialog(this, "Syllabus not Downloated");
                }
                fw.close();
                con.close();
            }
            catch(ClassNotFoundException e)
            {}  
            catch(Exception e)
            {}
        }
            
    }//GEN-LAST:event_Table_CourseMouseClicked

    private void ComboBox_NotifyPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_NotifyPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        remtmfcltadm();
        remtmstdadm();;
        remtmtestsch();
    }//GEN-LAST:event_ComboBox_NotifyPopupMenuWillBecomeVisible

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home1Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home1Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home1Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home1Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Home1Page().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Add;
    private javax.swing.JButton Button_Cancel;
    private javax.swing.JButton Button_Delete;
    private javax.swing.JButton Button_Done;
    private javax.swing.JButton Button_Edit;
    private javax.swing.JButton Button_Logout;
    private javax.swing.JButton Button_Update;
    public javax.swing.JComboBox ComboBox_Branch;
    private javax.swing.JComboBox ComboBox_Notify;
    public javax.swing.JComboBox ComboBox_Sem;
    public javax.swing.JComboBox ComboBox_Stream;
    public javax.swing.JComboBox ComboBox_Subject;
    public javax.swing.JComboBox ComboBox_UserCateg;
    private javax.swing.JLabel Label_Course;
    private javax.swing.JLabel Label_FacultyFeedback;
    private javax.swing.JLabel Label_FacultyList;
    private javax.swing.JLabel Label_FunctChange;
    private javax.swing.JLabel Label_Home;
    private javax.swing.JLabel Label_Logo;
    public javax.swing.JLabel Label_NotiNum;
    private javax.swing.JLabel Label_Notification;
    private javax.swing.JLabel Label_StudentList;
    private javax.swing.JLabel Label_StudentReoprt;
    private javax.swing.JLabel Label_Welcome;
    private javax.swing.JLabel Label_WelcomeUser;
    public javax.swing.JLabel Label_WelcomeUserName;
    javax.swing.JPanel Panel_Course;
    private javax.swing.JPanel Panel_FacultyFeedback2;
    private javax.swing.JPanel Panel_FacultyList;
    private javax.swing.JPanel Panel_FunctChange;
    private javax.swing.JPanel Panel_Functionalities;
    private javax.swing.JPanel Panel_NewsHome;
    private javax.swing.JPanel Panel_StdReport;
    private javax.swing.JPanel Panel_StudentList;
    private javax.swing.JPanel Panel_Welcome;
    private javax.swing.JScrollPane ScrollPane_CourseTable;
    private javax.swing.JScrollPane ScrollPane_FacultyFeedbackTable;
    private javax.swing.JScrollPane ScrollPane_FacultyListTable;
    private javax.swing.JScrollPane ScrollPane_FcltyReg_Notifctn;
    private javax.swing.JScrollPane ScrollPane_NewsHomeTable;
    private javax.swing.JScrollPane ScrollPane_StdAdmssn_Notifctn;
    private javax.swing.JScrollPane ScrollPane_StdReportTable;
    private javax.swing.JScrollPane ScrollPane_StudentListTable;
    private javax.swing.JScrollPane ScrollPane_TestSchedule_Notifctn;
    private javax.swing.JTabbedPane TabbedPane_Notification;
    public javax.swing.JTable Table_Course;
    private javax.swing.JTable Table_FacultyFeedback;
    private javax.swing.JTable Table_FacultyList;
    private javax.swing.JTable Table_FcltyReg_Notifctn;
    public javax.swing.JTable Table_NewsHome;
    private javax.swing.JTable Table_StdAdmssn_Notifctn;
    private javax.swing.JTable Table_StdReport;
    private javax.swing.JTable Table_StudentList;
    private javax.swing.JTable Table_TestSchedule_Notifctn;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
