package lms;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.Reader;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Sony
 */
public class Home1Page1 extends javax.swing.JFrame {
 public int status = 0;
    /**
     * Creates new form CoursePage
     */
    DefaultTableModel mod3,mod4,mod5,mod6,mod7,mod9,mod10,mod12,mod14;
    String s1,s2,str,branch,semester,stream1,branch1,sem11;
    int a,b,c,d,e,f,g,h,i,j,k,l,att,att1;
    public  static int cnt=0,tst=0,assg=0,tt=0,notes=0,not=0,rep=0; 
    //int total;
    public Home1Page1() {
        initComponents();
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        ATTENDANCE_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        this.load_tab3();
    }
    public void student(String a,String b)
    {
        WELCOME_STUDENT.setText("WELCOME "+b);
        s1=a;
        s2=b;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        ATTRIBUTES = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        LOGOUT = new javax.swing.JButton();
        WELCOME_STUDENT = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        HEADING_PANEL = new javax.swing.JPanel();
        HEADING = new javax.swing.JLabel();
        SUBHEADING_PANEL = new javax.swing.JPanel();
        ATTRIBUTES_DISPLAY = new javax.swing.JLabel();
        SELECT_STREAM = new javax.swing.JComboBox();
        SELECT_BRANCH = new javax.swing.JComboBox();
        SELECT_SEC = new javax.swing.JComboBox();
        SELECT_SEM = new javax.swing.JComboBox();
        HOME_PANEL = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        NEWS_TABLE = new javax.swing.JTable();
        MYINFO_PANEL = new javax.swing.JPanel();
        S_ADDRESS1 = new javax.swing.JLabel();
        S_MOBNO1 = new javax.swing.JLabel();
        S_EMAILID1 = new javax.swing.JLabel();
        S_FATHER_NAME1 = new javax.swing.JLabel();
        S_PARENT_MOBNO = new javax.swing.JLabel();
        S_NAME1 = new javax.swing.JLabel();
        S_DOB1 = new javax.swing.JLabel();
        S_GENDER1 = new javax.swing.JLabel();
        S_BLOOD_GROUP1 = new javax.swing.JLabel();
        S_STREAM1 = new javax.swing.JLabel();
        S_BRANCH1 = new javax.swing.JLabel();
        S_SEMESTER1 = new javax.swing.JLabel();
        S_YEAR1 = new javax.swing.JLabel();
        S_ROLLNO1 = new javax.swing.JLabel();
        S_PASSWORD1 = new javax.swing.JLabel();
        S_CATEGORY1 = new javax.swing.JLabel();
        S_DOB2 = new javax.swing.JTextField();
        S_CATEGORY2 = new javax.swing.JTextField();
        S_NAME2 = new javax.swing.JTextField();
        PASSWORD2 = new javax.swing.JLabel();
        CATEGORY2 = new javax.swing.JLabel();
        BRANCH2 = new javax.swing.JLabel();
        S_YEAR2 = new javax.swing.JTextField();
        S_SEM1 = new javax.swing.JTextField();
        S_OK1 = new javax.swing.JButton();
        S_PASSWORD2 = new javax.swing.JTextField();
        S_ROLLNO2 = new javax.swing.JTextField();
        BLOOD_GROUP2 = new javax.swing.JLabel();
        S_EDIT1 = new javax.swing.JButton();
        GENDER2 = new javax.swing.JLabel();
        FATHER_NAME2 = new javax.swing.JLabel();
        PARENT_MOBNO2 = new javax.swing.JLabel();
        ADDRESS2 = new javax.swing.JLabel();
        STREAM2 = new javax.swing.JLabel();
        SEMESTER2 = new javax.swing.JLabel();
        S_STREAM2 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        S_ADDRESS2 = new javax.swing.JTextArea();
        S_BRANCH2 = new javax.swing.JTextField();
        DOB2 = new javax.swing.JLabel();
        EMAIL_ID2 = new javax.swing.JLabel();
        Name2 = new javax.swing.JLabel();
        S_GENDER2 = new javax.swing.JTextField();
        YEAR2 = new javax.swing.JLabel();
        S_BLOOD_GROUP2 = new javax.swing.JTextField();
        MOB_NO2 = new javax.swing.JLabel();
        S_MOBNO2 = new javax.swing.JTextField();
        S_EMAILID2 = new javax.swing.JTextField();
        S_FATHER_NAME2 = new javax.swing.JTextField();
        S_PARENT_MOBNO2 = new javax.swing.JTextField();
        ROLLNO2 = new javax.swing.JLabel();
        ASSIGNMENT_PANEL = new javax.swing.JPanel();
        U_D2 = new javax.swing.JButton();
        U_D1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ASSIGNMENT_TABLE = new javax.swing.JTable();
        U_D3 = new javax.swing.JButton();
        path = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        FEEDBACK_PANEL = new javax.swing.JPanel();
        RATING_4 = new javax.swing.JLabel();
        RATING_1 = new javax.swing.JLabel();
        RB_10 = new javax.swing.JRadioButton();
        RB_13 = new javax.swing.JRadioButton();
        RB_14 = new javax.swing.JRadioButton();
        RB_8 = new javax.swing.JRadioButton();
        RB_7 = new javax.swing.JRadioButton();
        RB_16 = new javax.swing.JRadioButton();
        RB_6 = new javax.swing.JRadioButton();
        RB_19 = new javax.swing.JRadioButton();
        RB_5 = new javax.swing.JRadioButton();
        RATING_3 = new javax.swing.JLabel();
        RB_20 = new javax.swing.JRadioButton();
        RB_3 = new javax.swing.JRadioButton();
        RB_2 = new javax.swing.JRadioButton();
        RB_18 = new javax.swing.JRadioButton();
        RATING_2 = new javax.swing.JLabel();
        RB_25 = new javax.swing.JRadioButton();
        RB_17 = new javax.swing.JRadioButton();
        RB_9 = new javax.swing.JRadioButton();
        RB_11 = new javax.swing.JRadioButton();
        RB_12 = new javax.swing.JRadioButton();
        POOR = new javax.swing.JLabel();
        RATING_5 = new javax.swing.JLabel();
        RB_15 = new javax.swing.JRadioButton();
        GOOD = new javax.swing.JLabel();
        RB_1 = new javax.swing.JRadioButton();
        AVERAGE = new javax.swing.JLabel();
        EXCELLENT = new javax.swing.JLabel();
        RB_23 = new javax.swing.JRadioButton();
        VERY_GOOD = new javax.swing.JLabel();
        RB_24 = new javax.swing.JRadioButton();
        RB_22 = new javax.swing.JRadioButton();
        RB_4 = new javax.swing.JRadioButton();
        RB_21 = new javax.swing.JRadioButton();
        FACULTY_1 = new javax.swing.JLabel();
        FACULTY_2 = new javax.swing.JLabel();
        FACULTY_3 = new javax.swing.JLabel();
        FACULTY_4 = new javax.swing.JLabel();
        FACULTY_5 = new javax.swing.JLabel();
        FEEDBACK_SUBMIT = new javax.swing.JButton();
        FACULTY = new javax.swing.JLabel();
        REPORT_PANEL = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        ASS_TABLE = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        TEST_REPORT = new javax.swing.JTable();
        S_VIEW_TT = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        VIEW_TT_TABLE = new javax.swing.JTable();
        NOTES_PANEL = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        RESOURCE_TABLE = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        NOTIFICATION_PANEL = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        ATTENDANCE_PANEL = new javax.swing.JPanel();
        s_name = new javax.swing.JLabel();
        s_rollno = new javax.swing.JLabel();
        attendance = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        roll_no = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TEST_PANEL = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TEST_TABLE = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ATTRIBUTES.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        LOGOUT.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        LOGOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/logout.jpg"))); // NOI18N
        LOGOUT.setText("  LOGOUT");
        LOGOUT.setBorder(new javax.swing.border.SoftBevelBorder(0));
        LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUTActionPerformed(evt);
            }
        });

        WELCOME_STUDENT.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N
        WELCOME_STUDENT.setText("Welcome Student");

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/ep.PNG"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/home.png"))); // NOI18N
        jLabel2.setText("  Home");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/my info.png"))); // NOI18N
        jLabel3.setText("  My Info");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/CatProds.png"))); // NOI18N
        jLabel4.setText("  Assignment");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/CONTENTS.PNG"))); // NOI18N
        jLabel5.setText("  Test");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/feedback-iconedit.png"))); // NOI18N
        jLabel6.setText("  Feedback");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/student_report.jpg"))); // NOI18N
        jLabel7.setText("  View Report");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/TIMETABLE.png"))); // NOI18N
        jLabel8.setText("  View Time Table");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/Daily Sales.png"))); // NOI18N
        jLabel9.setText("  Notes");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/notification.jpg"))); // NOI18N
        jLabel10.setText("  Notification");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/ATT.png"))); // NOI18N
        jLabel11.setText("View Attendance");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ATTRIBUTESLayout = new javax.swing.GroupLayout(ATTRIBUTES);
        ATTRIBUTES.setLayout(ATTRIBUTESLayout);
        ATTRIBUTESLayout.setHorizontalGroup(
            ATTRIBUTESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ATTRIBUTESLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ATTRIBUTESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ATTRIBUTESLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(ATTRIBUTESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(WELCOME_STUDENT, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(32, 32, 32))
            .addGroup(ATTRIBUTESLayout.createSequentialGroup()
                .addGroup(ATTRIBUTESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ATTRIBUTESLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(ATTRIBUTESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ATTRIBUTESLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(LOGOUT)))
                .addContainerGap())
        );
        ATTRIBUTESLayout.setVerticalGroup(
            ATTRIBUTESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ATTRIBUTESLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WELCOME_STUDENT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(14, 14, 14)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LOGOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        HEADING_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HEADING_PANEL.setPreferredSize(new java.awt.Dimension(609, 56));

        HEADING.setFont(new java.awt.Font("Constantia", 1, 24)); // NOI18N
        HEADING.setText("***** WELCOME TO XYZ COLLEGE *****");

        javax.swing.GroupLayout HEADING_PANELLayout = new javax.swing.GroupLayout(HEADING_PANEL);
        HEADING_PANEL.setLayout(HEADING_PANELLayout);
        HEADING_PANELLayout.setHorizontalGroup(
            HEADING_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEADING_PANELLayout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(HEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        HEADING_PANELLayout.setVerticalGroup(
            HEADING_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEADING_PANELLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HEADING)
                .addContainerGap())
        );

        SUBHEADING_PANEL.setPreferredSize(new java.awt.Dimension(92, 48));

        ATTRIBUTES_DISPLAY.setFont(new java.awt.Font("Constantia", 1, 20)); // NOI18N
        ATTRIBUTES_DISPLAY.setText("News and Events");

        SELECT_STREAM.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        SELECT_STREAM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Stream ---", " " }));
        SELECT_STREAM.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                SELECT_STREAMPopupMenuWillBecomeVisible(evt);
            }
        });

        SELECT_BRANCH.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        SELECT_BRANCH.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Branch ---" }));
        SELECT_BRANCH.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                SELECT_BRANCHPopupMenuWillBecomeVisible(evt);
            }
        });
        SELECT_BRANCH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SELECT_BRANCHItemStateChanged(evt);
            }
        });
        SELECT_BRANCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SELECT_BRANCHActionPerformed(evt);
            }
        });

        SELECT_SEC.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        SELECT_SEC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- Select Sec ---", "A", "B" }));

        SELECT_SEM.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        SELECT_SEM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select Sem-" }));
        SELECT_SEM.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                SELECT_SEMPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                SELECT_SEMPopupMenuWillBecomeVisible(evt);
            }
        });
        SELECT_SEM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SELECT_SEMItemStateChanged(evt);
            }
        });
        SELECT_SEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SELECT_SEMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SUBHEADING_PANELLayout = new javax.swing.GroupLayout(SUBHEADING_PANEL);
        SUBHEADING_PANEL.setLayout(SUBHEADING_PANELLayout);
        SUBHEADING_PANELLayout.setHorizontalGroup(
            SUBHEADING_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SUBHEADING_PANELLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SUBHEADING_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SELECT_STREAM, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATTRIBUTES_DISPLAY, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SELECT_BRANCH, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SELECT_SEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SELECT_SEC, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SUBHEADING_PANELLayout.setVerticalGroup(
            SUBHEADING_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SUBHEADING_PANELLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ATTRIBUTES_DISPLAY)
                .addGap(18, 18, 18)
                .addGroup(SUBHEADING_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SELECT_STREAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SELECT_SEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SELECT_BRANCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SELECT_SEC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        HOME_PANEL.setBackground(new java.awt.Color(255, 255, 255));
        HOME_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HOME_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Object colheads1[] = {"DATE","TOPIC","NEWS"};
        mod3 = new DefaultTableModel();
        mod3.addColumn(colheads1[0]);
        mod3.addColumn(colheads1[1]);
        mod3.addColumn(colheads1[2]);
        NEWS_TABLE.setModel(mod3);
        jScrollPane1.setViewportView(NEWS_TABLE);

        javax.swing.GroupLayout HOME_PANELLayout = new javax.swing.GroupLayout(HOME_PANEL);
        HOME_PANEL.setLayout(HOME_PANELLayout);
        HOME_PANELLayout.setHorizontalGroup(
            HOME_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        HOME_PANELLayout.setVerticalGroup(
            HOME_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );

        MYINFO_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        MYINFO_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        S_CATEGORY2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_CATEGORY2ActionPerformed(evt);
            }
        });

        S_NAME2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_NAME2ActionPerformed(evt);
            }
        });

        PASSWORD2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        PASSWORD2.setText("Password");

        CATEGORY2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        CATEGORY2.setText("Category");

        BRANCH2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        BRANCH2.setText("Branch");

        S_YEAR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_YEAR2ActionPerformed(evt);
            }
        });

        S_OK1.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        S_OK1.setText("OK");
        S_OK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_OK1ActionPerformed(evt);
            }
        });

        S_PASSWORD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_PASSWORD2ActionPerformed(evt);
            }
        });

        BLOOD_GROUP2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        BLOOD_GROUP2.setText("Blood Group");

        S_EDIT1.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        S_EDIT1.setText("EDIT");
        S_EDIT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_EDIT1ActionPerformed(evt);
            }
        });

        GENDER2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        GENDER2.setText("Gender");

        FATHER_NAME2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        FATHER_NAME2.setText("Father's Name");

        PARENT_MOBNO2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        PARENT_MOBNO2.setText("Parent's Mob-No");

        ADDRESS2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        ADDRESS2.setText("Address");

        STREAM2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        STREAM2.setText("Stream");

        SEMESTER2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        SEMESTER2.setText("Semester");

        S_ADDRESS2.setColumns(20);
        S_ADDRESS2.setRows(5);
        jScrollPane7.setViewportView(S_ADDRESS2);

        DOB2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        DOB2.setText("Date of Birth");

        EMAIL_ID2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        EMAIL_ID2.setText("Email Id");

        Name2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Name2.setText("Name");

        YEAR2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        YEAR2.setText("Year");

        MOB_NO2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        MOB_NO2.setText("Mobile Number ");

        S_PARENT_MOBNO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_PARENT_MOBNO2ActionPerformed(evt);
            }
        });

        ROLLNO2.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        ROLLNO2.setText("Roll No");

        javax.swing.GroupLayout MYINFO_PANELLayout = new javax.swing.GroupLayout(MYINFO_PANEL);
        MYINFO_PANEL.setLayout(MYINFO_PANELLayout);
        MYINFO_PANELLayout.setHorizontalGroup(
            MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MOB_NO2)
                            .addComponent(EMAIL_ID2)
                            .addComponent(FATHER_NAME2)
                            .addComponent(ADDRESS2)
                            .addComponent(BLOOD_GROUP2)
                            .addComponent(GENDER2)
                            .addComponent(DOB2)
                            .addComponent(Name2))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MYINFO_PANELLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PARENT_MOBNO2)))
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(S_NAME2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(S_DOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(S_GENDER2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(S_BLOOD_GROUP2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(S_EMAILID2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(S_PARENT_MOBNO2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(S_FATHER_NAME2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(257, 257, 257)
                                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(S_NAME1)
                                    .addComponent(S_DOB1)
                                    .addComponent(S_GENDER1)
                                    .addComponent(S_MOBNO1)
                                    .addComponent(S_EMAILID1)
                                    .addComponent(S_FATHER_NAME1)
                                    .addComponent(S_ADDRESS1)
                                    .addComponent(S_BLOOD_GROUP1)
                                    .addComponent(S_PARENT_MOBNO))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(S_STREAM1)
                                    .addComponent(S_BRANCH1)
                                    .addComponent(S_SEMESTER1)
                                    .addComponent(S_YEAR1)
                                    .addComponent(S_ROLLNO1)
                                    .addComponent(S_PASSWORD1)
                                    .addComponent(S_CATEGORY1))
                                .addGap(37, 37, 37))
                            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(S_EDIT1)
                                .addGap(46, 46, 46)
                                .addComponent(S_OK1)
                                .addContainerGap())))
                    .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(S_MOBNO2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                    .addGap(302, 472, Short.MAX_VALUE)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(STREAM2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(BRANCH2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SEMESTER2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(YEAR2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ROLLNO2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(PASSWORD2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(CATEGORY2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(S_YEAR2)
                        .addComponent(S_ROLLNO2)
                        .addComponent(S_PASSWORD2)
                        .addComponent(S_CATEGORY2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                        .addComponent(S_STREAM2)
                        .addComponent(S_SEM1)
                        .addComponent(S_BRANCH2))
                    .addGap(49, 49, 49)))
        );
        MYINFO_PANELLayout.setVerticalGroup(
            MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S_NAME1)
                            .addComponent(S_STREAM1))
                        .addGap(35, 35, 35)
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S_DOB1)
                            .addComponent(S_BRANCH1)))
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                            .addGap(71, 71, 71)
                            .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(S_GENDER1)
                                .addComponent(S_SEMESTER1))
                            .addGap(7, 7, 7)
                            .addComponent(GENDER2))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MYINFO_PANELLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(S_NAME2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Name2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(S_DOB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DOB2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(S_GENDER2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(S_BLOOD_GROUP1)
                    .addComponent(S_YEAR1))
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S_BLOOD_GROUP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BLOOD_GROUP2))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(MOB_NO2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MYINFO_PANELLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(S_MOBNO2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(S_MOBNO1)
                    .addComponent(S_ROLLNO1))
                .addGap(8, 8, 8)
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EMAIL_ID2)
                    .addComponent(S_EMAILID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(S_EMAILID1)
                    .addComponent(S_PASSWORD1))
                .addGap(18, 18, 18)
                .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FATHER_NAME2)
                            .addComponent(S_FATHER_NAME2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S_PARENT_MOBNO2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PARENT_MOBNO2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(S_PARENT_MOBNO)
                        .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(S_ADDRESS1))
                            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(ADDRESS2))
                            .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(S_FATHER_NAME1)
                        .addComponent(S_CATEGORY1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(S_OK1)
                        .addComponent(S_EDIT1)))
                .addContainerGap())
            .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MYINFO_PANELLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(STREAM2)
                        .addComponent(S_STREAM2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BRANCH2)
                        .addComponent(S_BRANCH2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SEMESTER2)
                        .addComponent(S_SEM1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(YEAR2)
                        .addComponent(S_YEAR2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(21, 21, 21)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ROLLNO2)
                        .addComponent(S_ROLLNO2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(17, 17, 17)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PASSWORD2)
                        .addComponent(S_PASSWORD2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(MYINFO_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CATEGORY2)
                        .addComponent(S_CATEGORY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(155, Short.MAX_VALUE)))
        );

        ASSIGNMENT_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ASSIGNMENT_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        U_D2.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        U_D2.setText("DOWNLOAD");
        U_D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                U_D2ActionPerformed(evt);
            }
        });

        U_D1.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        U_D1.setText("UPLOAD");
        U_D1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                U_D1ActionPerformed(evt);
            }
        });

        Object colheads3[] = {"ASSIGNMENT NAME","SUBJECT","SUBJECT_ID","F_LINK","S_LINK"};
        mod4 = new DefaultTableModel();
        mod4.addColumn(colheads3[0]);
        mod4.addColumn(colheads3[1]);
        mod4.addColumn(colheads3[2]);
        mod4.addColumn(colheads3[3]);
        mod4.addColumn(colheads3[4]);
        ASSIGNMENT_TABLE.setModel(mod4);
        ASSIGNMENT_TABLE.setToolTipText("");
        ASSIGNMENT_TABLE.setAlignmentX(1.0F);
        ASSIGNMENT_TABLE.setAlignmentY(1.0F);
        ASSIGNMENT_TABLE.setRowHeight(20);
        jScrollPane4.setViewportView(ASSIGNMENT_TABLE);

        U_D3.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        U_D3.setText("BROWSE");
        U_D3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                U_D3ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel15.setText("SUBJECT NAME");

        jLabel16.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel16.setText("ASSIGNMENT NAME");

        jLabel17.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("CLICK ON SUBJECT ID TO DOWNLOAD");

        javax.swing.GroupLayout ASSIGNMENT_PANELLayout = new javax.swing.GroupLayout(ASSIGNMENT_PANEL);
        ASSIGNMENT_PANEL.setLayout(ASSIGNMENT_PANELLayout);
        ASSIGNMENT_PANELLayout.setHorizontalGroup(
            ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addGroup(ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                        .addComponent(U_D1)
                        .addGap(57, 57, 57)
                        .addComponent(U_D2)
                        .addGap(248, 248, 248))
                    .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                        .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ASSIGNMENT_PANELLayout.createSequentialGroup()
                                .addComponent(U_D3)
                                .addGap(248, 248, 248))))))
            .addComponent(jScrollPane4)
            .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                .addGroup(ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ASSIGNMENT_PANELLayout.setVerticalGroup(
            ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ASSIGNMENT_PANELLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(U_D3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(ASSIGNMENT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(U_D2)
                    .addComponent(U_D1))
                .addGap(34, 34, 34))
        );

        FEEDBACK_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        FEEDBACK_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        RATING_4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RATING_4.setText("  4");

        RATING_1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RATING_1.setText("  1");

        RB_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_10ActionPerformed(evt);
            }
        });

        RB_13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_13ActionPerformed(evt);
            }
        });

        RB_14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_14ActionPerformed(evt);
            }
        });

        RB_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_8ActionPerformed(evt);
            }
        });

        RB_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_7ActionPerformed(evt);
            }
        });

        RB_16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_16ActionPerformed(evt);
            }
        });

        RB_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_6ActionPerformed(evt);
            }
        });

        RB_19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_19ActionPerformed(evt);
            }
        });

        RB_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_5ActionPerformed(evt);
            }
        });

        RATING_3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RATING_3.setText("  3");

        RB_20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_20ActionPerformed(evt);
            }
        });

        RB_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_3ActionPerformed(evt);
            }
        });

        RB_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_2ActionPerformed(evt);
            }
        });

        RB_18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_18ActionPerformed(evt);
            }
        });

        RATING_2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RATING_2.setText(" 2");

        RB_25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_25ActionPerformed(evt);
            }
        });

        RB_17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_17ActionPerformed(evt);
            }
        });

        RB_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_9ActionPerformed(evt);
            }
        });

        RB_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_11ActionPerformed(evt);
            }
        });

        RB_12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_12ActionPerformed(evt);
            }
        });

        POOR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        POOR.setText("1-Poor");

        RATING_5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RATING_5.setText("  5");

        RB_15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_15ActionPerformed(evt);
            }
        });

        GOOD.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        GOOD.setText("3-Good");

        RB_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_1ActionPerformed(evt);
            }
        });

        AVERAGE.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        AVERAGE.setText("2-Average");

        EXCELLENT.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        EXCELLENT.setText("5-Excellent");

        RB_23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_23ActionPerformed(evt);
            }
        });

        VERY_GOOD.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        VERY_GOOD.setText("4-Very Good");

        RB_24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_24ActionPerformed(evt);
            }
        });

        RB_22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_22ActionPerformed(evt);
            }
        });

        RB_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_4ActionPerformed(evt);
            }
        });

        RB_21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_21ActionPerformed(evt);
            }
        });

        FEEDBACK_SUBMIT.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        FEEDBACK_SUBMIT.setText("SUBMIT");
        FEEDBACK_SUBMIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FEEDBACK_SUBMITActionPerformed(evt);
            }
        });

        FACULTY.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        FACULTY.setText("Faculty");

        javax.swing.GroupLayout FEEDBACK_PANELLayout = new javax.swing.GroupLayout(FEEDBACK_PANEL);
        FEEDBACK_PANEL.setLayout(FEEDBACK_PANELLayout);
        FEEDBACK_PANELLayout.setHorizontalGroup(
            FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(POOR)
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FACULTY)
                                    .addComponent(FACULTY_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FACULTY_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FACULTY_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FACULTY_5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FACULTY_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RB_21)
                                    .addComponent(RB_16)
                                    .addComponent(RB_11)
                                    .addComponent(RB_6)
                                    .addComponent(RB_1)
                                    .addComponent(RATING_1))))
                        .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RB_2)
                                    .addComponent(RATING_2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RB_7)
                                    .addComponent(RB_12)
                                    .addComponent(RB_17)
                                    .addComponent(RB_22))
                                .addGap(59, 59, 59)
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RB_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RB_8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RB_13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RB_18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RB_23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RATING_3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(AVERAGE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(GOOD)))
                        .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(RB_4)
                                    .addComponent(RATING_4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RB_9)
                                    .addComponent(RB_14)
                                    .addComponent(RB_19)
                                    .addComponent(RB_24))
                                .addGap(53, 53, 53)
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RB_5)
                                    .addComponent(RATING_5)
                                    .addComponent(RB_10)
                                    .addComponent(RB_15)
                                    .addComponent(RB_20)
                                    .addComponent(RB_25)))
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(VERY_GOOD)
                                .addGap(18, 18, 18)
                                .addComponent(EXCELLENT))))
                    .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(FEEDBACK_SUBMIT)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        FEEDBACK_PANELLayout.setVerticalGroup(
            FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(POOR)
                    .addComponent(AVERAGE)
                    .addComponent(GOOD)
                    .addComponent(VERY_GOOD)
                    .addComponent(EXCELLENT))
                .addGap(33, 33, 33)
                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RATING_1)
                    .addComponent(RATING_3)
                    .addComponent(RATING_4)
                    .addComponent(RATING_5)
                    .addComponent(RATING_2)
                    .addComponent(FACULTY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RB_1)
                    .addComponent(RB_2)
                    .addComponent(RB_3)
                    .addComponent(RB_4)
                    .addComponent(RB_5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FACULTY_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FACULTY_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RB_6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RB_7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RB_8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RB_9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RB_10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                        .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RB_12)
                                    .addComponent(RB_11)
                                    .addComponent(RB_14)
                                    .addComponent(RB_15)
                                    .addComponent(FACULTY_3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RB_16)
                                    .addComponent(RB_19)
                                    .addComponent(RB_20)
                                    .addComponent(RB_17)
                                    .addComponent(FACULTY_4, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(FEEDBACK_PANELLayout.createSequentialGroup()
                                .addComponent(RB_13)
                                .addGap(18, 18, 18)
                                .addComponent(RB_18)))
                        .addGap(18, 18, 18)
                        .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(FEEDBACK_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(RB_22)
                                .addComponent(RB_21)
                                .addComponent(RB_23)
                                .addComponent(RB_24))
                            .addComponent(FACULTY_5)))
                    .addComponent(RB_25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(FEEDBACK_SUBMIT)
                .addGap(38, 38, 38))
        );

        REPORT_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        REPORT_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Object colheads12[] = {"ASSIGNMENT NAME","SUBJECT","MARKS"};
        mod12 = new DefaultTableModel();
        mod12.addColumn(colheads12[0]);
        mod12.addColumn(colheads12[1]);
        mod12.addColumn(colheads12[2]);
        ASS_TABLE.setModel(mod12);
        jScrollPane9.setViewportView(ASS_TABLE);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("ASSIGNMENT", jPanel3);

        Object colheads14[] = {"TEST_NAME","MARKS","STATUS","PERCENT"};
        mod14 = new DefaultTableModel();
        mod14.addColumn(colheads14[0]);
        mod14.addColumn(colheads14[1]);
        mod14.addColumn(colheads14[2]);
        mod14.addColumn(colheads14[3]);
        TEST_REPORT.setModel(mod14);
        jScrollPane10.setViewportView(TEST_REPORT);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("TEST DETAILS", jPanel4);

        javax.swing.GroupLayout REPORT_PANELLayout = new javax.swing.GroupLayout(REPORT_PANEL);
        REPORT_PANEL.setLayout(REPORT_PANELLayout);
        REPORT_PANELLayout.setHorizontalGroup(
            REPORT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        REPORT_PANELLayout.setVerticalGroup(
            REPORT_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        S_VIEW_TT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "", 0, 0, new java.awt.Font("Constantia", 1, 14))); // NOI18N
        S_VIEW_TT.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Object colheads9[] = {"DAY/PERIOD","P1","P2","P3","P4","P5","P6","P7"};
        mod9 = new DefaultTableModel();
        mod9.addColumn(colheads9[0]);
        mod9.addColumn(colheads9[1]);
        mod9.addColumn(colheads9[2]);
        mod9.addColumn(colheads9[3]);
        mod9.addColumn(colheads9[4]);
        mod9.addColumn(colheads9[5]);
        mod9.addColumn(colheads9[6]);
        mod9.addColumn(colheads9[7]);
        VIEW_TT_TABLE.setModel(mod9);
        jScrollPane3.setViewportView(VIEW_TT_TABLE);

        javax.swing.GroupLayout S_VIEW_TTLayout = new javax.swing.GroupLayout(S_VIEW_TT);
        S_VIEW_TT.setLayout(S_VIEW_TTLayout);
        S_VIEW_TTLayout.setHorizontalGroup(
            S_VIEW_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
        );
        S_VIEW_TTLayout.setVerticalGroup(
            S_VIEW_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(S_VIEW_TTLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 320, Short.MAX_VALUE))
        );

        NOTES_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        NOTES_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Object colheads5[] = {"SUBJECT","SUB_ID","FACULTY","LINK"};
        mod5 = new DefaultTableModel();
        mod5.addColumn(colheads5[0]);
        mod5.addColumn(colheads5[1]);
        mod5.addColumn(colheads5[2]);
        mod5.addColumn(colheads5[3]);
        RESOURCE_TABLE.setFont(null);
        RESOURCE_TABLE.setModel(mod5);
        RESOURCE_TABLE.setAlignmentY(1.0F);
        RESOURCE_TABLE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RESOURCE_TABLEMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(RESOURCE_TABLE);

        jLabel13.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel13.setText("CLICK ON SUBJECT_ID TO DOWNLOAD RESPECTIVE SUBJECT NOTES");

        jLabel14.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel14.setText("NOTES/QUESTION BANK");

        javax.swing.GroupLayout NOTES_PANELLayout = new javax.swing.GroupLayout(NOTES_PANEL);
        NOTES_PANEL.setLayout(NOTES_PANELLayout);
        NOTES_PANELLayout.setHorizontalGroup(
            NOTES_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
            .addGroup(NOTES_PANELLayout.createSequentialGroup()
                .addGroup(NOTES_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NOTES_PANELLayout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NOTES_PANELLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        NOTES_PANELLayout.setVerticalGroup(
            NOTES_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NOTES_PANELLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        NOTIFICATION_PANEL.setBackground(new java.awt.Color(255, 255, 255));
        NOTIFICATION_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        NOTIFICATION_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N

        Object colheads6[] = {"SEEN","DECISION","NOTIFY TYPE","DATE"};
        mod6 = new DefaultTableModel();
        mod6.addColumn(colheads6[0]);
        mod6.addColumn(colheads6[1]);
        mod6.addColumn(colheads6[2]);
        mod6.addColumn(colheads6[3]);
        jTable2.setModel(mod6);
        jScrollPane5.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("ASSIGNMENT", jPanel1);

        Object colheads7[] = {"SEEN","DECISION","NOTIFY TYPE","DATE"};
        mod7 = new DefaultTableModel();
        mod7.addColumn(colheads7[0]);
        mod7.addColumn(colheads7[1]);
        mod7.addColumn(colheads7[2]);
        mod7.addColumn(colheads7[3]);
        jTable3.setModel(mod7);
        jScrollPane6.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TEST", jPanel2);

        javax.swing.GroupLayout NOTIFICATION_PANELLayout = new javax.swing.GroupLayout(NOTIFICATION_PANEL);
        NOTIFICATION_PANEL.setLayout(NOTIFICATION_PANELLayout);
        NOTIFICATION_PANELLayout.setHorizontalGroup(
            NOTIFICATION_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        NOTIFICATION_PANELLayout.setVerticalGroup(
            NOTIFICATION_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        ATTENDANCE_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ATTENDANCE_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        name.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        name.setText("NAME");

        roll_no.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        roll_no.setText("ROLL NO");

        jLabel12.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        jLabel12.setText("ATTENDANCE");

        javax.swing.GroupLayout ATTENDANCE_PANELLayout = new javax.swing.GroupLayout(ATTENDANCE_PANEL);
        ATTENDANCE_PANEL.setLayout(ATTENDANCE_PANELLayout);
        ATTENDANCE_PANELLayout.setHorizontalGroup(
            ATTENDANCE_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ATTENDANCE_PANELLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(s_name, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(roll_no)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s_rollno, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attendance, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        ATTENDANCE_PANELLayout.setVerticalGroup(
            ATTENDANCE_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ATTENDANCE_PANELLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(ATTENDANCE_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(attendance, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s_rollno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(s_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roll_no, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(344, Short.MAX_VALUE))
        );

        TEST_PANEL.setBackground(new java.awt.Color(255, 255, 255));
        TEST_PANEL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        TEST_PANEL.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N

        Object colheads15[] = {"EXAM_NAME","TOTAL_QUESTION","EXAM_ID","HOUR","MINUTES"};
        mod10 = new DefaultTableModel();
        mod10.addColumn(colheads15[0]);
        mod10.addColumn(colheads15[1]);
        mod10.addColumn(colheads15[2]);
        mod10.addColumn(colheads15[3]);
        mod10.addColumn(colheads15[4]);
        TEST_TABLE.setModel(mod10);
        jScrollPane8.setViewportView(TEST_TABLE);

        javax.swing.GroupLayout TEST_PANELLayout = new javax.swing.GroupLayout(TEST_PANEL);
        TEST_PANEL.setLayout(TEST_PANELLayout);
        TEST_PANELLayout.setHorizontalGroup(
            TEST_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
        );
        TEST_PANELLayout.setVerticalGroup(
            TEST_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HOME_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SUBHEADING_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                    .addComponent(HEADING_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ATTRIBUTES, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(MYINFO_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(241, 241, 241)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(ASSIGNMENT_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(244, 244, 244)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(FEEDBACK_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(246, 246, 246)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(REPORT_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(246, 246, 246)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(S_VIEW_TT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(244, 244, 244)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(NOTES_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(246, 246, 246)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(NOTIFICATION_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(251, 251, 251)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(ATTENDANCE_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(244, 244, 244)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(TEST_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(244, 244, 244)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 309, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ATTRIBUTES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HEADING_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SUBHEADING_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(220, 220, 220))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(215, 215, 215)
                    .addComponent(MYINFO_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(632, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(216, 216, 216)
                    .addComponent(ASSIGNMENT_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(590, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(217, 217, 217)
                    .addComponent(FEEDBACK_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(585, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(217, 217, 217)
                    .addComponent(REPORT_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(575, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(215, 215, 215)
                    .addComponent(S_VIEW_TT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(224, 224, 224)
                    .addComponent(NOTES_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(586, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(224, 224, 224)
                    .addComponent(NOTIFICATION_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(585, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(231, 231, 231)
                    .addComponent(ATTENDANCE_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(586, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(216, 216, 216)
                    .addComponent(TEST_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(577, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUTActionPerformed
        // TODO add your handling code here:
         LoginPage12 L = new LoginPage12();
        int logout=JOptionPane.showConfirmDialog(this,"Are u want to sure u want to logout");
        if(logout==0)
        {
            this.setVisible(false);
            L.setVisible(true);
        }
    }//GEN-LAST:event_LOGOUTActionPerformed

    private void U_D1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_U_D1ActionPerformed
        // TODO add your handling code here:
        //mod4.setValueAt(path.getText(), ASSIGNMENT_TABLE.getSelectedRow(), 5);
        String sn,an;
        sn=jTextField1.getText();
        an=jTextField2.getText();
        if(sn.equals("")|| an.equals(""))
        {
            JOptionPane.showMessageDialog(this,"ENTER SUB NAME AND ASSIGNMENT NAME ");
        }
       
        else
        {
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
	    Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            PreparedStatement ps=con.prepareStatement("update ASSIGNMENT  set S_LINK=? where S_ID=? and SUBJECT=? and ASSIGNMENT_NAME_AND_NUMBER=?");
            File f=new File(pt);
            FileReader fr=new FileReader(f);
            ps.setCharacterStream(1,fr,(int)f.length());
            ps.setString(2,s1);
            ps.setString(3,sn);
            ps.setString(4, an);
            int i=ps.executeUpdate();
            JOptionPane.showMessageDialog(null,i+"records affected");
            con.close();
        }
        catch(Exception e)
        {
           System.out.println(e);
           e.printStackTrace();
        }
        java.util.Date today = Calendar.getInstance().getTime();
       SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
       String t=formatter.format(today);
         try
		{
		        Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
			String sql="insert into NOTIFICATION values(?,?,?,?,?)";
			PreparedStatement ps=con.prepareStatement(sql);
                        
			ps.setString(1,"Faculty");
			ps.setString(2, "no");
                        ps.setString(3,"pending");
                        ps.setString(4,"Assignment Completed");
                        ps.setString(5,t);
                        
			int i=ps.executeUpdate();
			if(i>0)
			{
				JOptionPane.showMessageDialog(null,"Record Inserted");
			}

		}
		catch(ClassNotFoundException e)
		{
		}
		catch(Exception e) 
		{
         
		}
        }
    }//GEN-LAST:event_U_D1ActionPerformed

    private void RB_14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_14ActionPerformed
        // TODO add your handling code here:
          if(RB_14.isSelected())
        {
            c=4;
            RB_11.setEnabled(false);
            RB_12.setEnabled(false);
            RB_13.setEnabled(false);
            RB_15.setEnabled(false);
        }
        else
        {
            RB_11.setEnabled(true);
            RB_12.setEnabled(true);
            RB_13.setEnabled(true);
            RB_15.setEnabled(true);
        }
    }//GEN-LAST:event_RB_14ActionPerformed

    private void RB_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_5ActionPerformed
        // TODO add your handling code here:
         if(RB_5.isSelected())
        {
            a=5;
            RB_1.setEnabled(false);
            RB_2.setEnabled(false);
            RB_3.setEnabled(false);
            RB_4.setEnabled(false);
        }
        else
        {
            RB_1.setEnabled(true);
            RB_2.setEnabled(true);
            RB_3.setEnabled(true);
            RB_4.setEnabled(true);
        }
    }//GEN-LAST:event_RB_5ActionPerformed

    private void RB_12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_12ActionPerformed
        // TODO add your handling code here:
          if(RB_12.isSelected())
        {
            c=2;
            RB_11.setEnabled(false);
            RB_13.setEnabled(false);
            RB_14.setEnabled(false);
            RB_15.setEnabled(false);
        }
        else
        {
            RB_11.setEnabled(true);
            RB_13.setEnabled(true);
            RB_14.setEnabled(true);
            RB_15.setEnabled(true);
        }
    }//GEN-LAST:event_RB_12ActionPerformed
 public void load_tab3()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from NEWSFEED where NEWS_CAT='student'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod3.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        //tm.addRow(row);
        NEWS_TABLE.setModel(mod3);
        NEWS_TABLE.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = NEWS_TABLE.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        int[] selectedRow = NEWS_TABLE.getSelectedRows();
        int[] selectedColumns = NEWS_TABLE.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData = (String) NEWS_TABLE.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData.toString());
      }

    });
        
       // Object o = jTable1.getValueAt(1, 1);
        
        //jPanel2.setVisible(true);

    }
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        HOME_PANEL.setVisible(true);
        ATTRIBUTES_DISPLAY.setText("News and Events");
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
         ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
       
        SELECT_SEM.setVisible(false);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        ATTRIBUTES_DISPLAY.setText("My Info");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(true);
        ASSIGNMENT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
         ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        try
		{
		        Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                        String sql="select * from S_DETAILS where S_ID =?";
                        PreparedStatement ps=con.prepareStatement(sql);
                        ps.setString(1,s1);
			ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           S_NAME2.setText(rs.getString("S_NAME"));
                           S_DOB2.setText(rs.getString("DOB"));
                           S_GENDER2.setText(rs.getString("S_GENDER"));
                           S_BLOOD_GROUP2.setText(rs.getString("S_BLOODGROUP"));
                           S_MOBNO2.setText(rs.getString("S_MOBNO"));
                           S_EMAILID2.setText(rs.getString("S_EMAIL_ID"));
                           S_FATHER_NAME2.setText(rs.getString("FATHER_NAME"));
                           S_PARENT_MOBNO2.setText(rs.getString("PARENT_MOBNO"));
                           S_ADDRESS2.setText(rs.getString("S_ADDRESS"));
                           S_STREAM2.setText(rs.getString("STREAM"));
                           S_BRANCH2.setText(rs.getString("BRANCH"));
                           S_SEM1.setText(rs.getString("SEM"));
                           S_YEAR2.setText(rs.getString("BATCH"));
                           S_ROLLNO2.setText(rs.getString("ROLL_NO"));
                           S_PASSWORD2.setText(rs.getString("PASSWORD"));
                           S_CATEGORY2.setText(rs.getString("S_CATEGORY"));
                
                        }
                
                }
                catch(ClassNotFoundException e)
                {
                   
		}
		catch(Exception e) 
		{
                    JOptionPane.showMessageDialog(null, e);
		}
        
        
        S_NAME2.setEnabled(false);
        S_DOB2.setEnabled(false);
        S_GENDER2.setEnabled(false);
        S_MOBNO2.setEnabled(false);
        S_BLOOD_GROUP2.setEnabled(false);
        S_EMAILID2.setEnabled(false);
        S_FATHER_NAME2.setEnabled(false);
        S_PARENT_MOBNO2.setEnabled(false);
        S_ADDRESS2.setEnabled(false);
        S_STREAM2.setEnabled(false);
        S_BRANCH2.setEnabled(false);
        S_SEM1.setEnabled(false);
        S_YEAR2.setEnabled(false);
        S_ROLLNO2.setEnabled(false);
        S_PASSWORD2.setEnabled(false);
        S_CATEGORY2.setEnabled(false);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        ATTRIBUTES_DISPLAY.setText("Assignment");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(true);
        REPORT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
         ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        assg=++assg;
        if(assg==1)
        {
            this.load_tab4();
        }
    }//GEN-LAST:event_jLabel4MouseClicked
   String selectedData3 = null;
   public void load_tab4()
   {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select ASSIGNMENT_NAME_AND_NUMBER ,SUBJECT, SUBJECT_ID , F_LINK, S_LINK from ASSIGNMENT  where S_ID=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, s1);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod4.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        //tm.addRow(row);
        ASSIGNMENT_TABLE.setModel(mod4);
        ASSIGNMENT_TABLE.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = ASSIGNMENT_TABLE.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        
        int[] selectedRow = ASSIGNMENT_TABLE.getSelectedRows();
        int[] selectedColumns = ASSIGNMENT_TABLE.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData3 = (String) ASSIGNMENT_TABLE.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData3.toString());
      }

    });
   }
  
   
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        ATTRIBUTES_DISPLAY.setText("Test");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        TEST_PANEL.setVisible(true);
         ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        
        SELECT_SEM.setVisible(false);
        tst=++tst;
        if(tst==1)
        {
            this.load_tab11();
        }
    }//GEN-LAST:event_jLabel5MouseClicked
public void load_tab11()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select EXAM_NAME,TOTAL_QUESTION,EXAM_ID,HOUR,MINUTES from TESTDETAILS";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod10.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            
        }
        //tm.addRow(row);
        TEST_TABLE.setModel(mod10);
        TEST_TABLE.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = TEST_TABLE.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        //int[] selectedRow = TEST_TABLE.getSelectedRows();
        //int[] selectedColumns = TEST_TABLE.getSelectedColumns();
        int selectedRow1 = TEST_TABLE.getSelectedRow();
        String test_id = TEST_TABLE.getValueAt(selectedRow1, 2).toString();
        String hour1 = TEST_TABLE.getValueAt(selectedRow1, 3).toString();
        String minutes1 = TEST_TABLE.getValueAt(selectedRow1, 4).toString();
        String tot1 = TEST_TABLE.getValueAt(selectedRow1, 1).toString();
        //for (int i = 0; i < selectedRow.length; i++) {
            //selectedData = TEST_TABLE.getValueAt(, 2).toString();
        //}
        JOptionPane.showMessageDialog(null, hour1);
        instru_1 ins = new instru_1(test_id,Integer.parseInt(tot1),s1,Integer.parseInt(hour1),Integer.parseInt(minutes1));
        ins.setVisible(true);
        
      }

    });
    }
    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        SELECT_STREAM.setSelectedIndex(0);
        SELECT_BRANCH.setSelectedIndex(0);
        SELECT_SEM.setSelectedIndex(0);
        status=1;
        RB_1.setEnabled(true);
         RB_2.setEnabled(true);
         RB_3.setEnabled(true);
         RB_4.setEnabled(true);
         RB_5.setEnabled(true);
         RB_6.setEnabled(true);
         RB_7.setEnabled(true);
         RB_8.setEnabled(true);
         RB_9.setEnabled(true);
         RB_10.setEnabled(true);
         RB_11.setEnabled(true);
         RB_12.setEnabled(true);
         RB_13.setEnabled(true);
         RB_14.setEnabled(true);
         RB_15.setEnabled(true);
         RB_16.setEnabled(true);
         RB_17.setEnabled(true);
         RB_18.setEnabled(true);
         RB_19.setEnabled(true);
         RB_20.setEnabled(true);
         RB_21.setEnabled(true);
         RB_22.setEnabled(true);
         RB_23.setEnabled(true);
         RB_24.setEnabled(true);
         RB_25.setEnabled(true);
         
        ATTRIBUTES_DISPLAY.setText("Feedback");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(true);
        SELECT_BRANCH.setVisible(true);
        SELECT_SEC.setVisible(false);        
        SELECT_SEM.setVisible(true);
        str=SELECT_STREAM.getSelectedItem().toString();
        branch=SELECT_BRANCH.getSelectedItem().toString();
        FEEDBACK_PANEL.setVisible(true);
        /* try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select F_NAME from F_DETAILS where STREAM=? and DEPARTMENT=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, str);
            ps.setString(2, branch);
            ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           FACULTY_1.setText(rs.getString("F_NAME"));
                           FACULTY_2.setText(rs.getString("F_NAME"));
                           //FACULTY_3.setText(rs.getString("F_NAME"));
                           //FACULTY_4.setText(rs.getString("F_NAME"));
                           //FACULTY_5.setText(rs.getString("F_NAME"));
                        }
        }
        catch(ClassNotFoundException e)
        {
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }*/
       
        //load_feed();
       
    }//GEN-LAST:event_jLabel6MouseClicked
    
    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        ATTRIBUTES_DISPLAY.setText("View Report");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(true);
        FEEDBACK_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
         ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        rep=++rep;
        if(rep==1)
        {
            this.load_tab14();
            this.load_tab15();
        }
                         
    }//GEN-LAST:event_jLabel7MouseClicked
public void load_tab14()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select ASSIGNMENT_NAME_AND_NUMBER,SUBJECT,MARKS from ASSIGNMENT";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod12.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            
        }
        //tm.addRow(row);
        ASS_TABLE.setModel(mod12);
        ASS_TABLE.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = ASS_TABLE.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        int[] selectedRow = ASS_TABLE.getSelectedRows();
        int[] selectedColumns = ASS_TABLE.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData = (String) ASS_TABLE.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData.toString());
      }

    });
    }
public void load_tab15()
    {
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select EXAM_NAME,MARKS,STATUS,PERCENT from RESULT where STUDENT_ID=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,s1);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod14.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            
        }
        //tm.addRow(row);
        TEST_REPORT.setModel(mod14);
        TEST_REPORT.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = TEST_REPORT.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        int[] selectedRow = TEST_REPORT.getSelectedRows();
        int[] selectedColumns = TEST_REPORT.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData = (String) TEST_REPORT.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData.toString());
      }

    });
    }
    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        SELECT_STREAM.setSelectedIndex(0);
        SELECT_BRANCH.setSelectedIndex(0);
        SELECT_SEM.setSelectedIndex(0);
        status=2;
        ATTRIBUTES_DISPLAY.setText("View Time Table");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        TEST_PANEL.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
         ATTENDANCE_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(true);
        SELECT_BRANCH.setVisible(true);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(true);
       // this.load_tab9();
    }//GEN-LAST:event_jLabel8MouseClicked
    public String st,br,sem;
    String array[]={"MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"};
    int sub;
    public void load_tab9()
    {
        st=SELECT_STREAM.getSelectedItem().toString();
        br=SELECT_BRANCH.getSelectedItem().toString();
        sem=SELECT_SEM.getSelectedItem().toString();
       
          try
        {
             for(sub=0;sub<6;sub++)
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select SUBJECT from TIMETABLE where STREAM=? and BRANCH=? and SEM=? and DAY=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,st);
            ps.setString(2,br);
            ps.setString(3,sem);
            ps.setString(4,array[sub]);
            ResultSet rs = ps.executeQuery();
            //ResultSetMetaData rd = rs.getMetaData();
            //int col = rd.getColumnCount();
            //Object [] rowData = new Object[col];
            //JOptionPane.showMessageDialog(this, ""+col);
            
               String a1=null;
            String a2[]=new String[7];
            int count1=0;
            while(rs.next())
            {
                
                //JOptionPane.showMessageDialog(this, "1");
                //for (int z = 0; z < rowData.length; z++)
                //{
                    //rowData[z] = rs.getObject(z+1);
                   //System.out.println(rowData[z]);
                //for(int z=0;z<7;z++){
                    a1=rs.getString("SUBJECT");
                    if(count1==0)
                    {
                        a2[0]=a1;
                    }
                     if(count1==1)
                     {
                         a2[1]=a1;
                     }
                      if(count1==2)
                     {
                         a2[2]=a1;
                     }
                       if(count1==3)
                     {
                         a2[3]=a1;
                     }
                        if(count1==4)
                     {
                         a2[4]=a1;
                     }
                        if(count1==5)
                     {
                         a2[5]=a1;
                     }
                       if(count1==6)
                     {
                         a2[6]=a1;
                     }
                       
                    count1++;
             //JOptionPane.showMessageDialog(null,a1);
                //}
                //JOptionPane.showMessageDialog(null, array[sub]);
             }
             //String r1[]=null;
               int i;
               //JOptionPane.showMessageDialog(null, "Hello");
               String a=array[sub];
               
            //JOptionPane.showMessageDialog(null, rowData[0]);
            String r1[]={a,a2[0],a2[1],a2[2],a2[3],a2[4],a2[5],a2[6]};
            mod9.addRow(r1);
            }
             //mod9.addRow(rowData);
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
       
        //tm.addRow(row);
        VIEW_TT_TABLE.setModel(mod9);
        VIEW_TT_TABLE.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = VIEW_TT_TABLE.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        int[] selectedRow = VIEW_TT_TABLE.getSelectedRows();
        int[] selectedColumns = VIEW_TT_TABLE.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData = (String) VIEW_TT_TABLE.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData.toString());
      }

    });
    }
    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        ATTRIBUTES_DISPLAY.setText("Notes");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(true);
        NOTIFICATION_PANEL.setVisible(false);
        ATTENDANCE_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        notes=++notes;
        if(notes==1)
        {
            this.load_tab5();
        }
    }//GEN-LAST:event_jLabel9MouseClicked
    String selectedData1 = null; 
    public void load_tab5()
    {
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from RESOURCES";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod5.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}
        //tm.addRow(row);
        RESOURCE_TABLE.setModel(mod5);
        RESOURCE_TABLE.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = RESOURCE_TABLE.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = RESOURCE_TABLE.getSelectedRows();
        int[] selectedColumns = RESOURCE_TABLE.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData1 = (String) RESOURCE_TABLE.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        //JOptionPane.showMessageDialog(null, selectedData1.toString());
      }

    });
        
       // Object o = jTable1.getValueAt(1, 1);
        
        //jPanel2.setVisible(true);

    }
    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
         
        ATTRIBUTES_DISPLAY.setText("Notification");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(true);
        ATTENDANCE_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        not=++not;
        if(not==1)
        {
            this.load_tab6();
            this.load_tab7();
        }
    }//GEN-LAST:event_jLabel10MouseClicked
    public void load_tab6()
    {
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select SEEN_STATUS,DECISION_STATUS,NOTIFY_TYPE,NOTIFY_DATE from NOTIFICATION  where USER_TYPE=? and NOTIFY_TYPE=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,"student");
            ps.setString(2,"assignment");
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod6.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        //tm.addRow(row);
        jTable2.setModel(mod6);
        jTable2.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel = jTable2.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        int[] selectedRow = jTable2.getSelectedRows();
        int[] selectedColumns = jTable2.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData = (String) jTable2.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData.toString());
      }

    });
    }
    public void load_tab7()
    {
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select SEEN_STATUS,DECISION_STATUS,NOTIFY_TYPE,NOTIFY_DATE from NOTIFICATION where USER_TYPE=? and NOTIFY_TYPE=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,"faculty");
            ps.setString(2,"test schedule");
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd = rs.getMetaData();
            int col = rd.getColumnCount();
            //JOptionPane.showMessageDialog(this, ""+col);
            while (rs.next())
            {
                Object [] rowData = new Object[col];
                //JOptionPane.showMessageDialog(this, "1");
                for (int z = 0; z < rowData.length; ++z)
                {
                    rowData[z] = rs.getObject(z+1);
                }
                mod7.addRow(rowData);
            }
            
        }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        //tm.addRow(row);
        jTable3.setModel(mod7);
        jTable3.setCellSelectionEnabled(true);
        
         ListSelectionModel cellSelectionModel=jTable3.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        String selectedData = null;

        int[] selectedRow = jTable3.getSelectedRows();
        int[] selectedColumns = jTable3.getSelectedColumns();

        for (int i = 0; i < selectedRow.length; i++) {
          for (int j = 0; j < selectedColumns.length; j++) {
            selectedData = (String) jTable3.getValueAt(selectedRow[i], selectedColumns[j]).toString();
          }
        }
        JOptionPane.showMessageDialog(null, selectedData.toString());
      }

    });
    }
    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
         ATTRIBUTES_DISPLAY.setText("View Attendance");
        HOME_PANEL.setVisible(false);
        MYINFO_PANEL.setVisible(false);
        ASSIGNMENT_PANEL.setVisible(false);
        REPORT_PANEL.setVisible(false);
        FEEDBACK_PANEL.setVisible(false);
        S_VIEW_TT.setVisible(false);
        NOTES_PANEL.setVisible(false);
        NOTIFICATION_PANEL.setVisible(false);
        TEST_PANEL.setVisible(false);
        ATTENDANCE_PANEL.setVisible(true);
        SELECT_STREAM.setVisible(false);
        SELECT_BRANCH.setVisible(false);
        SELECT_SEC.setVisible(false);
        SELECT_SEM.setVisible(false);
        
        try
		{
		        Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                        String sql="select S_NAME,ROLL_NO from S_DETAILS where S_ID ='" +s1+ "'"; 
			PreparedStatement ps=con.prepareStatement(sql);
			ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           s_name.setText(rs.getString("S_NAME"));
                           s_rollno.setText(rs.getString("ROLL_NO"));
                        }
                
                }
                catch(ClassNotFoundException e)
                {
                   
		}
		catch(Exception e) 
		{
                    JOptionPane.showMessageDialog(null, e);
		}
        try
		{
		        Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                        String sql="select COUNT(*) from ATTENDANCE where STATUS='P' and S_ID ='" +s1+ "'"; 
			PreparedStatement ps=con.prepareStatement(sql);
                        
                        ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           att=rs.getInt("COUNT(*)");
                           //attendance.setText(str);
                        }
                            } 
                catch(ClassNotFoundException e)
                {
                   
		}
		catch(Exception e) 
		{
                    JOptionPane.showMessageDialog(null, e);
                }
                   try
                   {
                        Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                        String sql1="select COUNT(*) from ATTENDANCE where STATUS='A' and S_ID ='" +s1+ "'";
			PreparedStatement ps1=con.prepareStatement(sql1);
                        ResultSet rs1=ps1.executeQuery();
                        while(rs1.next())
                        {
                            //JOptionPane.showMessageDialog(null,att);
                            att1=rs1.getInt("COUNT(*)");
                            //JOptionPane.showMessageDialog(null,att1);
                            int tot=att+att1;
                            Integer total=new Integer((((tot-att)/tot)*100));
                            //total = (((att-att1)/att)*100);
                            attendance.setText(total.toString());
                        }
                      }
                
                catch(ClassNotFoundException e)
                {
                   
		}
		catch(Exception e) 
		{
                    JOptionPane.showMessageDialog(null, e);
                }
            
    }//GEN-LAST:event_jLabel11MouseClicked

    private void S_CATEGORY2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_CATEGORY2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_CATEGORY2ActionPerformed

    private void S_NAME2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_NAME2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_NAME2ActionPerformed

    private void S_YEAR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_YEAR2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_YEAR2ActionPerformed

    private void S_OK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_OK1ActionPerformed
        // TODO add your handling code here:
         String sn=S_NAME2.getText();
         String pass=S_PASSWORD2.getText();
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql="update S_DETAILS set S_NAME=? , PASSWORD=? where S_ID =?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,sn);
            ps.setString(2,pass);
            ps.setString(3,s1);
            int i=ps.executeUpdate();
            if(i>0)
            {
                JOptionPane.showMessageDialog(null, "RECORD INSERTED");
            }
        }
        catch(ClassNotFoundException e)
        {

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_S_OK1ActionPerformed

    private void S_PASSWORD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_PASSWORD2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_PASSWORD2ActionPerformed

    private void S_EDIT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_EDIT1ActionPerformed
        // TODO add your handling code here:
        
         S_NAME2.setEnabled(true);
         S_PASSWORD2.setEnabled(true);
        
    }//GEN-LAST:event_S_EDIT1ActionPerformed

    private void S_PARENT_MOBNO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_PARENT_MOBNO2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_PARENT_MOBNO2ActionPerformed

    private void RB_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_1ActionPerformed
        // TODO add your handling code here:
        if(RB_1.isSelected())
        {
            a=1;
            RB_2.setEnabled(false);
            RB_3.setEnabled(false);
            RB_4.setEnabled(false);
            RB_5.setEnabled(false);
        }
        else
        {
            RB_2.setEnabled(true);
            RB_3.setEnabled(true);
            RB_4.setEnabled(true);
            RB_5.setEnabled(true);
        }
    }//GEN-LAST:event_RB_1ActionPerformed

    private void RB_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_2ActionPerformed
        // TODO add your handling code here:
        if(RB_2.isSelected())
        {
            a=2;
            RB_1.setEnabled(false);
            RB_3.setEnabled(false);
            RB_4.setEnabled(false);
            RB_5.setEnabled(false);
        }
        else
        {
            RB_1.setEnabled(true);
            RB_3.setEnabled(true);
            RB_4.setEnabled(true);
            RB_5.setEnabled(true);
        }
        
    }//GEN-LAST:event_RB_2ActionPerformed

    private void SELECT_SEMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SELECT_SEMItemStateChanged
        // TODO add your handling code here:
        /*S_VIEW_TT.setVisible(true);
        this.load_tab9();?*/
    }//GEN-LAST:event_SELECT_SEMItemStateChanged

    private void RB_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_3ActionPerformed
        // TODO add your handling code here:
         if(RB_3.isSelected())
        {
            a=3;
            RB_1.setEnabled(false);
            RB_2.setEnabled(false);
            RB_4.setEnabled(false);
            RB_5.setEnabled(false);
        }
        else
        {
            RB_1.setEnabled(true);
            RB_2.setEnabled(true);
            RB_4.setEnabled(true);
            RB_5.setEnabled(true);
        }
    }//GEN-LAST:event_RB_3ActionPerformed

    private void RB_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_4ActionPerformed
        // TODO add your handling code here:
         if(RB_4.isSelected())
        {
            a=4;
            RB_1.setEnabled(false);
            RB_2.setEnabled(false);
            RB_3.setEnabled(false);
            RB_5.setEnabled(false);
        }
        else
        {
            RB_1.setEnabled(true);
            RB_2.setEnabled(true);
            RB_3.setEnabled(true);
            RB_5.setEnabled(true);
        }
    }//GEN-LAST:event_RB_4ActionPerformed

    private void RB_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_6ActionPerformed
        // TODO add your handling code here:
         if(RB_6.isSelected())
        {
            b=1;
            RB_7.setEnabled(false);
            RB_8.setEnabled(false);
            RB_9.setEnabled(false);
            RB_10.setEnabled(false);
        }
        else
        {
            RB_7.setEnabled(true);
            RB_8.setEnabled(true);
            RB_9.setEnabled(true);
            RB_10.setEnabled(true);
        }
    }//GEN-LAST:event_RB_6ActionPerformed

    private void RB_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_7ActionPerformed
        // TODO add your handling code here:
          if(RB_7.isSelected())
        {
            b=2;
            RB_6.setEnabled(false);
            RB_8.setEnabled(false);
            RB_9.setEnabled(false);
            RB_10.setEnabled(false);
        }
        else
        {
            RB_6.setEnabled(true);
            RB_8.setEnabled(true);
            RB_9.setEnabled(true);
            RB_10.setEnabled(true);
        }
    }//GEN-LAST:event_RB_7ActionPerformed

    private void RB_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_8ActionPerformed
        // TODO add your handling code here:
          if(RB_8.isSelected())
        {
            b=3;
            RB_6.setEnabled(false);
            RB_7.setEnabled(false);
            RB_9.setEnabled(false);
            RB_10.setEnabled(false);
        }
        else
        {
            RB_6.setEnabled(true);
            RB_7.setEnabled(true);
            RB_9.setEnabled(true);
            RB_10.setEnabled(true);
        }
    }//GEN-LAST:event_RB_8ActionPerformed

    private void RB_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_9ActionPerformed
        // TODO add your handling code here:
          if(RB_9.isSelected())
        {
            b=4;
            RB_6.setEnabled(false);
            RB_7.setEnabled(false);
            RB_8.setEnabled(false);
            RB_10.setEnabled(false);
        }
        else
        {
            RB_6.setEnabled(true);
            RB_7.setEnabled(true);
            RB_8.setEnabled(true);
            RB_10.setEnabled(true);
        }
    }//GEN-LAST:event_RB_9ActionPerformed

    private void RB_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_10ActionPerformed
        // TODO add your handling code here:
          if(RB_10.isSelected())
        {
            b=5;
            RB_6.setEnabled(false);
            RB_7.setEnabled(false);
            RB_8.setEnabled(false);
            RB_9.setEnabled(false);
        }
        else
        {
            RB_6.setEnabled(true);
            RB_7.setEnabled(true);
            RB_8.setEnabled(true);
            RB_9.setEnabled(true);
        }
    }//GEN-LAST:event_RB_10ActionPerformed

    private void RB_11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_11ActionPerformed
        // TODO add your handling code here:
          if(RB_11.isSelected())
        {
            c=1;
            RB_12.setEnabled(false);
            RB_13.setEnabled(false);
            RB_14.setEnabled(false);
            RB_15.setEnabled(false);
        }
        else
        {
            RB_12.setEnabled(true);
            RB_13.setEnabled(true);
            RB_14.setEnabled(true);
            RB_15.setEnabled(true);
        }
    }//GEN-LAST:event_RB_11ActionPerformed

    private void RB_13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_13ActionPerformed
        // TODO add your handling code here:
         if(RB_13.isSelected())
        {
            c=3;
            RB_11.setEnabled(false);
            RB_12.setEnabled(false);
            RB_14.setEnabled(false);
            RB_15.setEnabled(false);
        }
        else
        {
            RB_11.setEnabled(true);
            RB_12.setEnabled(true);
            RB_14.setEnabled(true);
            RB_15.setEnabled(true);
        }
    }//GEN-LAST:event_RB_13ActionPerformed

    private void RB_15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_15ActionPerformed
        // TODO add your handling code here:
           if(RB_15.isSelected())
        {
            c=5;
            RB_11.setEnabled(false);
            RB_12.setEnabled(false);
            RB_13.setEnabled(false);
            RB_14.setEnabled(false);
        }
        else
        {
            RB_11.setEnabled(true);
            RB_12.setEnabled(true);
            RB_13.setEnabled(true);
            RB_14.setEnabled(true);
        }
    }//GEN-LAST:event_RB_15ActionPerformed

    private void RB_16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_16ActionPerformed
        // TODO add your handling code here:
         if(RB_16.isSelected())
        {
            d=1;
            RB_17.setEnabled(false);
            RB_18.setEnabled(false);
            RB_19.setEnabled(false);
            RB_20.setEnabled(false);
        }
        else
        {
            RB_17.setEnabled(true);
            RB_18.setEnabled(true);
            RB_19.setEnabled(true);
            RB_20.setEnabled(true);
        }
    }//GEN-LAST:event_RB_16ActionPerformed

    private void RB_17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_17ActionPerformed
        // TODO add your handling code here:
          if(RB_17.isSelected())
        {
            d=2;
            RB_16.setEnabled(false);
            RB_18.setEnabled(false);
            RB_19.setEnabled(false);
            RB_20.setEnabled(false);
        }
        else
        {
            RB_16.setEnabled(true);
            RB_18.setEnabled(true);
            RB_19.setEnabled(true);
            RB_20.setEnabled(true);
        }
    }//GEN-LAST:event_RB_17ActionPerformed

    private void RB_18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_18ActionPerformed
        // TODO add your handling code here  
        if(RB_18.isSelected())
        {
            d=3;
            RB_16.setEnabled(false);
            RB_17.setEnabled(false);
            RB_19.setEnabled(false);
            RB_20.setEnabled(false);
        }
        else
        {
            RB_16.setEnabled(true);
            RB_17.setEnabled(true);
            RB_19.setEnabled(true);
            RB_20.setEnabled(true);
        }
        
    }//GEN-LAST:event_RB_18ActionPerformed

    private void RB_19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_19ActionPerformed
        // TODO add your handling code here:
          if(RB_19.isSelected())
        {
            d=4;
            RB_16.setEnabled(false);
            RB_17.setEnabled(false);
            RB_18.setEnabled(false);
            RB_20.setEnabled(false);
        }
        else
        {
            RB_16.setEnabled(true);
            RB_17.setEnabled(true);
            RB_18.setEnabled(true);
            RB_20.setEnabled(true);
        }
    }//GEN-LAST:event_RB_19ActionPerformed

    private void RB_20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_20ActionPerformed
        // TODO add your handling code here
          if(RB_20.isSelected())
        {
            d=5;
            RB_16.setEnabled(false);
            RB_17.setEnabled(false);
            RB_18.setEnabled(false);
            RB_19.setEnabled(false);
        }
        else
        {
            RB_16.setEnabled(true);
            RB_17.setEnabled(true);
            RB_18.setEnabled(true);
            RB_19.setEnabled(true);
        }
    }//GEN-LAST:event_RB_20ActionPerformed

    private void RB_21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_21ActionPerformed
        // TODO add your handling code here:
           if(RB_21.isSelected())
        {
            e=1;
            RB_22.setEnabled(false);
            RB_23.setEnabled(false);
            RB_24.setEnabled(false);
            RB_25.setEnabled(false);
        }
        else
        {
            RB_22.setEnabled(true);
            RB_23.setEnabled(true);
            RB_24.setEnabled(true);
            RB_25.setEnabled(true);
        }
    }//GEN-LAST:event_RB_21ActionPerformed

    private void RB_22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_22ActionPerformed
        // TODO add your handling code here:
           if(RB_22.isSelected())
        {
            e=2;
            RB_21.setEnabled(false);
            RB_23.setEnabled(false);
            RB_24.setEnabled(false);
            RB_25.setEnabled(false);
        }
        else
        {
            RB_21.setEnabled(true);
            RB_23.setEnabled(true);
            RB_24.setEnabled(true);
            RB_25.setEnabled(true);
        }
    }//GEN-LAST:event_RB_22ActionPerformed

    private void RB_23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_23ActionPerformed
        // TODO add your handling code here:
           if(RB_23.isSelected())
        {
            e=3;
            RB_21.setEnabled(false);
            RB_22.setEnabled(false);
            RB_24.setEnabled(false);
            RB_25.setEnabled(false);
        }
        else
        {
            RB_21.setEnabled(true);
            RB_22.setEnabled(true);
            RB_24.setEnabled(true);
            RB_25.setEnabled(true);
        }
    }//GEN-LAST:event_RB_23ActionPerformed

    private void RB_24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_24ActionPerformed
        // TODO add your handling code here:
           if(RB_24.isSelected())
        {
            e=4;
            RB_21.setEnabled(false);
            RB_22.setEnabled(false);
            RB_23.setEnabled(false);
            RB_25.setEnabled(false);
        }
        else
        {
            RB_21.setEnabled(true);
            RB_22.setEnabled(true);
            RB_23.setEnabled(true);
            RB_25.setEnabled(true);
        }
    }//GEN-LAST:event_RB_24ActionPerformed

    private void RB_25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_25ActionPerformed
        // TODO add your handling code here:
         if(RB_25.isSelected())
        {
            e=5;
            RB_21.setEnabled(false);
            RB_22.setEnabled(false);
            RB_23.setEnabled(false);
            RB_24.setEnabled(false);
        }
        else
        {
            RB_21.setEnabled(true);
            RB_22.setEnabled(true);
            RB_23.setEnabled(true);
            RB_24.setEnabled(true);
        }
    }//GEN-LAST:event_RB_25ActionPerformed

    private void SELECT_SEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SELECT_SEMActionPerformed
        // TODO add your handling code here:
        /*if(status==2)
        {
        S_VIEW_TT.setVisible(true);
        this.load_tab9();
        }
        else if(status==1)
        {
        str=SELECT_STREAM.getSelectedItem().toString();
        branch=SELECT_BRANCH.getSelectedItem().toString();
        semester=SELECT_SEM.getSelectedItem().toString();
        FEEDBACK_PANEL.setVisible(true);
        String f_name[];
        int count1 = 0;
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=? and SEM=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, str);
            ps.setString(2, branch);
            ps.setString(3, semester);
            ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           ++count1;
                           //FACULTY_3.setText(rs.getString("F_NAME"));
                           //FACULTY_4.setText(rs.getString("F_NAME"));
                           //FACULTY_5.setText(rs.getString("F_NAME"));
                        }
                        sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=? and SEM=?";
                        PreparedStatement ps1 = con.prepareStatement(sql);
                        ps1.setString(1, str);
                        ps1.setString(2, branch);
                        ps1.setString(3, semester);
                        ResultSet rs1 = ps1.executeQuery();
                        f_name = new String[count1];
                        for(int i=0;rs1.next();i++)
                        {
                            f_name[i] = rs1.getString("F_name");
                        }
                        FACULTY_1.setText(f_name[0]);
                        FACULTY_2.setText(f_name[1]);
        }
        catch(ClassNotFoundException e)
        {
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }*/
        
    }//GEN-LAST:event_SELECT_SEMActionPerformed
public int rat=0,countNo=0;
    private void FEEDBACK_SUBMITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FEEDBACK_SUBMITActionPerformed
        // TODO add your handling code here:
       //String f1=FACULTY_1.getText();
       //String f2=FACULTY_2.getText();
        String f_name1[];
       // int f_rating[];
        //int count_No[];
        int count1 = 0,i=0;
        int value[]={a,b,c,d,e};  
        //Integer f_rating[]=new Integer[count1];
        //Integer count_No[]=new Integer[count1];
        
        
        str=SELECT_STREAM.getSelectedItem().toString();
        branch=SELECT_BRANCH.getSelectedItem().toString();
        //JOptionPane.showMessageDialog(null,str);
        try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, str);
            ps.setString(2, branch);
            ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           ++count1;
                           //FACULTY_3.setText(rs.getString("F_NAME"));
                           //FACULTY_4.setText(rs.getString("F_NAME"));
                           //FACULTY_5.setText(rs.getString("F_NAME"));
                        }
                        sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=?";
                        PreparedStatement ps1 = con.prepareStatement(sql);
                        ps1.setString(1, str);
                        ps1.setString(2, branch);
                        ResultSet rs2 = ps1.executeQuery();
                        f_name1 = new String[count1];
                        Integer f_rating[]=new Integer[count1];
                        Integer count_No[]=new Integer[count1];
                        for( i=0;rs2.next();i++)
                        {
                             
                            //System.out.println("Hello");
                            f_name1[i] = rs2.getString("F_name");
                            rat=rs2.getInt("RATING");
                            countNo=rs2.getInt("COUNT");
                            
                            
                            f_rating[i]=((rat+value[i])/(countNo+1));
                            count_No[i]=countNo++;
                            
                           
                            //JOptionPane.showMessageDialog(null,f_rating[i]);
                            //JOptionPane.showMessageDialog(null,count_No[i]);
                            //JOptionPane.showMessageDialog(null,countNo);
                        }
                        try
                        {
                        Class.forName("oracle.jdbc.driver.OracleDriver");
                        Connection con1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                        String sql1="update F_DETAILS set RATING =?,COUNT=? where F_NAME=? and DEPARTMENT =?";
                        PreparedStatement ps3=con.prepareStatement(sql1);
                        for(int j=0;j<count1-1;j++)
                        {
                            //System.out.println("Hello");
                            ps3.setInt(1, f_rating[j]);
                            ps3.setInt(2, count_No[j]);
                            ps3.setString(3, f_name1[j]);
                            ps3.setString(4, branch);
                            int k=ps3.executeUpdate();
                            if(k>0)
                            {
				JOptionPane.showMessageDialog(null,"FEEDBACK SUBMITTED");
                            }
                        }
                        
                        }
             
                    catch(ClassNotFoundException e)
                    {
                   
                    }
                    catch(Exception e) 
                    {
                    JOptionPane.showMessageDialog(null, e);
                    }
                        
        }
        catch(ClassNotFoundException e)
        {
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
         RB_1.setEnabled(false);
         RB_2.setEnabled(false);
         RB_3.setEnabled(false);
         RB_4.setEnabled(false);
         RB_5.setEnabled(false);
         RB_6.setEnabled(false);
         RB_7.setEnabled(false);
         RB_8.setEnabled(false);
         RB_9.setEnabled(false);
         RB_10.setEnabled(false);
         RB_11.setEnabled(false);
         RB_12.setEnabled(false);
         RB_13.setEnabled(false);
         RB_14.setEnabled(false);
         RB_15.setEnabled(false);
         RB_16.setEnabled(false);
         RB_17.setEnabled(false);
         RB_18.setEnabled(false);
         RB_19.setEnabled(false);
         RB_20.setEnabled(false);
         RB_21.setEnabled(false);
         RB_22.setEnabled(false);
         RB_23.setEnabled(false);
         RB_24.setEnabled(false);
         RB_25.setEnabled(false);
      /*  try
        {
                        Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
                        String sql="select RATING,COUNT from F_DETAILS where F_NAME=? and DEPARTMENT =?"; 
			PreparedStatement ps=con.prepareStatement(sql);
                        for(int i=0;i<count1;i++)
                        {
                        ps.setString(1,f_name[i]);
                        ps.setString(2,branch);
                        //JOptionPane.showMessageDialog(null, f_name[0]);
			ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                         rat[i]=rs.getInt("RATING");
                         count[i]=rs.getInt("COUNT");
                         
                        }
               JOptionPane.showMessageDialog(null, rat);
               JOptionPane.showMessageDialog(null, count);
                        }
          }
                catch(ClassNotFoundException e)
                {
                   
		}
		catch(Exception e) 
		{
                    JOptionPane.showMessageDialog(null, e);
		}*/ 
        
       /* try
        {
             Class.forName("oracle.jdbc.driver.OracleDriver");
	     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
             String sql="update F_DETAILS set RATING =?,COUNT=? where F_NAME=? and DEPARTMENT =?";
             PreparedStatement ps=con.prepareStatement(sql);
             for(int i=0;i<count1;i++)
             {
             ps.setInt(1,f_rating[i]);
             ps.setInt(2, count_No[i]);
             ps.setString(3,f_name[i]);
             ps.setString(4,branch);
             int j=ps.executeUpdate();
			if(j>0)
			{
				JOptionPane.showMessageDialog(null,"Record Updated");
			}
             }
        }
             
          catch(ClassNotFoundException e)
          {
                   
	  }
	  catch(Exception e) 
	  {
                    JOptionPane.showMessageDialog(null, e);
	  }*/
    }//GEN-LAST:event_FEEDBACK_SUBMITActionPerformed
 
    private void SELECT_BRANCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SELECT_BRANCHActionPerformed
        // TODO add your handling code here:
        /*str=SELECT_STREAM.getSelectedItem().toString();
        branch=SELECT_BRANCH.getSelectedItem().toString();
        FEEDBACK_PANEL.setVisible(true);
        String f_name[];
        int count1 = 0;
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, str);
            ps.setString(2, branch);
            ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           ++count1;
                           //FACULTY_3.setText(rs.getString("F_NAME"));
                           //FACULTY_4.setText(rs.getString("F_NAME"));
                           //FACULTY_5.setText(rs.getString("F_NAME"));
                        }
                        sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=?";
                        PreparedStatement ps1 = con.prepareStatement(sql);
                        ps1.setString(1, str);
                        ps1.setString(2, branch);
                        ResultSet rs1 = ps1.executeQuery();
                        f_name = new String[count1];
                        for(int i=0;rs1.next();i++)
                        {
                            f_name[i] = rs1.getString("F_name");
                        }
                        FACULTY_1.setText(f_name[0]);
                        FACULTY_2.setText(f_name[1]);
        }
        catch(ClassNotFoundException e)
        {
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }*/
        
        
    }//GEN-LAST:event_SELECT_BRANCHActionPerformed

    private void SELECT_BRANCHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SELECT_BRANCHItemStateChanged
        // TODO add your handling code here:
      /* str=SELECT_STREAM.getSelectedItem().toString();
        branch=SELECT_BRANCH.getSelectedItem().toString();
        FEEDBACK_PANEL.setVisible(true);
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select F_NAME from F_DETAILS where STREAM=? and DEPARTMENT=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, str);
            ps.setString(2, branch);
            ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           FACULTY_1.setText(rs.getString("F_NAME"));
                           FACULTY_2.setText(rs.getString("F_NAME"));
                           //FACULTY_3.setText(rs.getString("F_NAME"));
                           //FACULTY_4.setText(rs.getString("F_NAME"));
                           //FACULTY_5.setText(rs.getString("F_NAME"));
                        }
        }
        catch(ClassNotFoundException e)
        {
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }*/
    }//GEN-LAST:event_SELECT_BRANCHItemStateChanged

    private void RESOURCE_TABLEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RESOURCE_TABLEMouseClicked
        // TODO add your handling code here: 
        try
		{
                    JOptionPane.showMessageDialog(null,selectedData1.toString());
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
			PreparedStatement ps=con.prepareStatement("select * from RESOURCES where SUBJECT_ID=?");
			ps.setString(1, selectedData1.toString());
                        
                        ResultSet rs=ps.executeQuery();
			rs.next();
			Clob c=rs.getClob(4);
	                Reader r=c.getCharacterStream();
			java.util.Date today = Calendar.getInstance().getTime();
			SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd-hh.mm.ss");
			String s="Assignment"+formatter.format(today);
			FileWriter fw=new FileWriter("e:\\"+s+".txt");
			int i;
			while((i=r.read())!=-1)
			{
				fw.write((char)i);
				System.out.println(i);
			}
			fw.close();
			con.close();
				
		}
		catch (Exception e)
		{
		    e.printStackTrace();	
		}
         JOptionPane.showMessageDialog(null,"DOWNLOADED SUCCESSFULLY");
                                        
    }//GEN-LAST:event_RESOURCE_TABLEMouseClicked

    private void U_D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_U_D2ActionPerformed
        // TODO add your handling code here:
        try
		{
                    //JOptionPane.showMessageDialog(null,selectedData3.toString());
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
			PreparedStatement ps=con.prepareStatement("select * from ASSIGNMENT where SUBJECT_ID=?");
			ps.setString(1, selectedData3.toString());
                        
                        ResultSet rs=ps.executeQuery();
			rs.next();
			Clob c=rs.getClob(5);
	                Reader r=c.getCharacterStream();
			java.util.Date today = Calendar.getInstance().getTime();
			SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd-hh.mm.ss");
			String s="Assignment"+formatter.format(today);
			FileWriter fw=new FileWriter("e:\\"+s+".txt");
			int i;
			while((i=r.read())!=-1)
			{
				fw.write((char)i);
				System.out.println(i);
			}
			fw.close();
			con.close();
				
		}
		catch (Exception e)
		{
		    e.printStackTrace();	
		}
         JOptionPane.showMessageDialog(null,"DOWNLOADED SUCCESSFULLY");
                                    
    }//GEN-LAST:event_U_D2ActionPerformed
String pt;
    private void U_D3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_U_D3ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
         FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT/Java ", "txt","java");
         chooser.setFileFilter(filter);
         int returnVal;
        returnVal = chooser.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            //return chooser.getSelectedFile();
         path.setText(chooser.getSelectedFile().getPath());
         System.out.println("You chose to open this file: " +
         chooser.getSelectedFile().getName());
         pt=path.getText();
        // JOptionPane.showMessageDialog(null,pt);
         }
    }//GEN-LAST:event_U_D3ActionPerformed

    private void SELECT_STREAMPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_SELECT_STREAMPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        SELECT_STREAM.removeAllItems();
        SELECT_STREAM.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"select stream"}));
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql="select distinct STREAM from course";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                SELECT_STREAM.addItem(rs.getString("STREAM"));
            }
        }
          catch(ClassNotFoundException e)
         {
                   
         }
         catch(Exception e) 
         {
              JOptionPane.showMessageDialog(null, e);
         }
    }//GEN-LAST:event_SELECT_STREAMPopupMenuWillBecomeVisible

    private void SELECT_BRANCHPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_SELECT_BRANCHPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        SELECT_BRANCH.removeAllItems();
        SELECT_BRANCH.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Select Branch"})); 
        stream1=SELECT_STREAM.getSelectedItem().toString();
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql="select distinct BRANCH from course where STREAM=?";
            
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,stream1);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                SELECT_BRANCH.addItem(rs.getString("BRANCH"));
            }
        }
          catch(ClassNotFoundException e)
         {
                   
         }
         catch(Exception e) 
         {
              JOptionPane.showMessageDialog(null, e);
         }
    }//GEN-LAST:event_SELECT_BRANCHPopupMenuWillBecomeVisible

    private void SELECT_SEMPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_SELECT_SEMPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        SELECT_SEM.removeAllItems();
        SELECT_SEM.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Select Sem"})); 
        branch1=SELECT_BRANCH.getSelectedItem().toString();
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql="select distinct SEM from course where STREAM=? and BRANCH=?";
            
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,stream1);
            ps.setString(2,branch1);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                SELECT_SEM.addItem(rs.getString("SEM"));
            }
        }
          catch(ClassNotFoundException e)
         {
                   
         }
         catch(Exception e) 
         {
              JOptionPane.showMessageDialog(null, e);
         }
                                                         

    
    }//GEN-LAST:event_SELECT_SEMPopupMenuWillBecomeVisible

    private void SELECT_SEMPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_SELECT_SEMPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
       
        if(status==2)
        {
        S_VIEW_TT.setVisible(true);
        cnt=++cnt;
        if(cnt==1)
        {   
            this.load_tab9();
        }
        }
        else if(status==1)
        {
        str=SELECT_STREAM.getSelectedItem().toString();
        branch=SELECT_BRANCH.getSelectedItem().toString();
        semester=SELECT_SEM.getSelectedItem().toString();
        FEEDBACK_PANEL.setVisible(true);
        String f_name[];
        int count1 = 0;
         try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","SYSTEM","qwer1234");
            String sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=? and SEM=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, str);
            ps.setString(2, branch);
            ps.setString(3, semester);
            ResultSet rs=ps.executeQuery();
                        while(rs.next())
                        {
                           ++count1;
                           //FACULTY_3.setText(rs.getString("F_NAME"));
                           //FACULTY_4.setText(rs.getString("F_NAME"));
                           //FACULTY_5.setText(rs.getString("F_NAME"));
                        }
                        sql = "select * from F_DETAILS where STREAM=? and DEPARTMENT=? and SEM=?";
                        PreparedStatement ps1 = con.prepareStatement(sql);
                        ps1.setString(1, str);
                        ps1.setString(2, branch);
                        ps1.setString(3, semester);
                        ResultSet rs1 = ps1.executeQuery();
                        f_name = new String[count1];
                        for(int i=0;rs1.next();i++)
                        {
                            f_name[i] = rs1.getString("F_name");
                        }
                        FACULTY_1.setText(f_name[0]);
                        FACULTY_2.setText(f_name[1]);
                       // FACULTY_3.setText(f_name[2]);
                       String a=FACULTY_1.getText();
                       String b=FACULTY_2.getText();
                       String c=FACULTY_3.getText();
                       if(c.equals(" "))
                       {
                            RB_1.setEnabled(false);
                            RB_2.setEnabled(false);
                            RB_3.setEnabled(false);
                            RB_4.setEnabled(false);
                            RB_5.setEnabled(false);
                       }
        }
        catch(ClassNotFoundException e)
        {
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        
    }//GEN-LAST:event_SELECT_SEMPopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home1Page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home1Page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home1Page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home1Page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Home1Page1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADDRESS2;
    private javax.swing.JPanel ASSIGNMENT_PANEL;
    private javax.swing.JTable ASSIGNMENT_TABLE;
    private javax.swing.JTable ASS_TABLE;
    private javax.swing.JPanel ATTENDANCE_PANEL;
    private javax.swing.JPanel ATTRIBUTES;
    private javax.swing.JLabel ATTRIBUTES_DISPLAY;
    private javax.swing.JLabel AVERAGE;
    private javax.swing.JLabel BLOOD_GROUP2;
    private javax.swing.JLabel BRANCH2;
    private javax.swing.JLabel CATEGORY2;
    private javax.swing.JLabel DOB2;
    private javax.swing.JLabel EMAIL_ID2;
    private javax.swing.JLabel EXCELLENT;
    private javax.swing.JLabel FACULTY;
    private javax.swing.JLabel FACULTY_1;
    private javax.swing.JLabel FACULTY_2;
    private javax.swing.JLabel FACULTY_3;
    private javax.swing.JLabel FACULTY_4;
    private javax.swing.JLabel FACULTY_5;
    private javax.swing.JLabel FATHER_NAME2;
    private javax.swing.JPanel FEEDBACK_PANEL;
    private javax.swing.JButton FEEDBACK_SUBMIT;
    private javax.swing.JLabel GENDER2;
    private javax.swing.JLabel GOOD;
    private javax.swing.JLabel HEADING;
    private javax.swing.JPanel HEADING_PANEL;
    private javax.swing.JPanel HOME_PANEL;
    private javax.swing.JButton LOGOUT;
    private javax.swing.JLabel MOB_NO2;
    private javax.swing.JPanel MYINFO_PANEL;
    private javax.swing.JTable NEWS_TABLE;
    private javax.swing.JPanel NOTES_PANEL;
    private javax.swing.JPanel NOTIFICATION_PANEL;
    private javax.swing.JLabel Name2;
    private javax.swing.JLabel PARENT_MOBNO2;
    private javax.swing.JLabel PASSWORD2;
    private javax.swing.JLabel POOR;
    private javax.swing.JLabel RATING_1;
    private javax.swing.JLabel RATING_2;
    private javax.swing.JLabel RATING_3;
    private javax.swing.JLabel RATING_4;
    private javax.swing.JLabel RATING_5;
    private javax.swing.JRadioButton RB_1;
    private javax.swing.JRadioButton RB_10;
    private javax.swing.JRadioButton RB_11;
    private javax.swing.JRadioButton RB_12;
    private javax.swing.JRadioButton RB_13;
    private javax.swing.JRadioButton RB_14;
    private javax.swing.JRadioButton RB_15;
    private javax.swing.JRadioButton RB_16;
    private javax.swing.JRadioButton RB_17;
    private javax.swing.JRadioButton RB_18;
    private javax.swing.JRadioButton RB_19;
    private javax.swing.JRadioButton RB_2;
    private javax.swing.JRadioButton RB_20;
    private javax.swing.JRadioButton RB_21;
    private javax.swing.JRadioButton RB_22;
    private javax.swing.JRadioButton RB_23;
    private javax.swing.JRadioButton RB_24;
    private javax.swing.JRadioButton RB_25;
    private javax.swing.JRadioButton RB_3;
    private javax.swing.JRadioButton RB_4;
    private javax.swing.JRadioButton RB_5;
    private javax.swing.JRadioButton RB_6;
    private javax.swing.JRadioButton RB_7;
    private javax.swing.JRadioButton RB_8;
    private javax.swing.JRadioButton RB_9;
    private javax.swing.JPanel REPORT_PANEL;
    private javax.swing.JTable RESOURCE_TABLE;
    private javax.swing.JLabel ROLLNO2;
    private javax.swing.JComboBox SELECT_BRANCH;
    private javax.swing.JComboBox SELECT_SEC;
    private javax.swing.JComboBox SELECT_SEM;
    private javax.swing.JComboBox SELECT_STREAM;
    private javax.swing.JLabel SEMESTER2;
    private javax.swing.JLabel STREAM2;
    private javax.swing.JPanel SUBHEADING_PANEL;
    private javax.swing.JLabel S_ADDRESS1;
    private javax.swing.JTextArea S_ADDRESS2;
    private javax.swing.JLabel S_BLOOD_GROUP1;
    private javax.swing.JTextField S_BLOOD_GROUP2;
    private javax.swing.JLabel S_BRANCH1;
    private javax.swing.JTextField S_BRANCH2;
    private javax.swing.JLabel S_CATEGORY1;
    private javax.swing.JTextField S_CATEGORY2;
    private javax.swing.JLabel S_DOB1;
    private javax.swing.JTextField S_DOB2;
    private javax.swing.JButton S_EDIT1;
    private javax.swing.JLabel S_EMAILID1;
    private javax.swing.JTextField S_EMAILID2;
    private javax.swing.JLabel S_FATHER_NAME1;
    private javax.swing.JTextField S_FATHER_NAME2;
    private javax.swing.JLabel S_GENDER1;
    private javax.swing.JTextField S_GENDER2;
    private javax.swing.JLabel S_MOBNO1;
    private javax.swing.JTextField S_MOBNO2;
    private javax.swing.JLabel S_NAME1;
    private javax.swing.JTextField S_NAME2;
    private javax.swing.JButton S_OK1;
    private javax.swing.JLabel S_PARENT_MOBNO;
    private javax.swing.JTextField S_PARENT_MOBNO2;
    private javax.swing.JLabel S_PASSWORD1;
    private javax.swing.JTextField S_PASSWORD2;
    private javax.swing.JLabel S_ROLLNO1;
    private javax.swing.JTextField S_ROLLNO2;
    private javax.swing.JTextField S_SEM1;
    private javax.swing.JLabel S_SEMESTER1;
    private javax.swing.JLabel S_STREAM1;
    private javax.swing.JTextField S_STREAM2;
    private javax.swing.JPanel S_VIEW_TT;
    private javax.swing.JLabel S_YEAR1;
    private javax.swing.JTextField S_YEAR2;
    private javax.swing.JPanel TEST_PANEL;
    private javax.swing.JTable TEST_REPORT;
    private javax.swing.JTable TEST_TABLE;
    private javax.swing.JButton U_D1;
    private javax.swing.JButton U_D2;
    private javax.swing.JButton U_D3;
    private javax.swing.JLabel VERY_GOOD;
    private javax.swing.JTable VIEW_TT_TABLE;
    private javax.swing.JLabel WELCOME_STUDENT;
    private javax.swing.JLabel YEAR2;
    private javax.swing.JLabel attendance;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel name;
    private javax.swing.JTextField path;
    private javax.swing.JLabel roll_no;
    private javax.swing.JLabel s_name;
    private javax.swing.JLabel s_rollno;
    // End of variables declaration//GEN-END:variables
}
